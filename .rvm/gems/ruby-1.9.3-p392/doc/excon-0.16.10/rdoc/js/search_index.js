var search_data = {"index":{"searchIndex":["excon","connection","errors","accepted","badgateway","badrequest","conflict","continue","created","error","expectationfailed","forbidden","found","gatewaytimeout","gone","httpstatuserror","internalservererror","lengthrequired","methodnotallowed","movedpermanently","multiplechoices","nocontent","nonauthoritativeinformation","notacceptable","notfound","notimplemented","notmodified","ok","partialcontent","paymentrequired","preconditionfailed","proxyauthenticationrequired","proxyconnectionerror","proxyparseerror","requestentitytoolarge","requesttimeout","requesturitoolong","requestedrangenotsatisfiable","resetcontent","seeother","serviceunavailable","socketerror","stubnotfound","switchingprotocols","temporaryredirect","timeout","unauthorized","unprocessableentity","unsupportedmediatype","useproxy","response","sslsocket","socket","standardinstrumentor","io","waitreadable","waitwritable","attributes()","connect()","connect()","defaults()","defaults=()","get_header()","inspect()","instrument()","mock()","mock=()","new()","new()","new()","new()","new()","new()","new()","parse()","read()","read()","request()","reset()","retry_limit()","retry_limit=()","ssl_ca_path()","ssl_ca_path=()","ssl_verify_peer()","ssl_verify_peer=()","status_error()","stub()","stubs()","write()","write()"],"longSearchIndex":["excon","excon::connection","excon::errors","excon::errors::accepted","excon::errors::badgateway","excon::errors::badrequest","excon::errors::conflict","excon::errors::continue","excon::errors::created","excon::errors::error","excon::errors::expectationfailed","excon::errors::forbidden","excon::errors::found","excon::errors::gatewaytimeout","excon::errors::gone","excon::errors::httpstatuserror","excon::errors::internalservererror","excon::errors::lengthrequired","excon::errors::methodnotallowed","excon::errors::movedpermanently","excon::errors::multiplechoices","excon::errors::nocontent","excon::errors::nonauthoritativeinformation","excon::errors::notacceptable","excon::errors::notfound","excon::errors::notimplemented","excon::errors::notmodified","excon::errors::ok","excon::errors::partialcontent","excon::errors::paymentrequired","excon::errors::preconditionfailed","excon::errors::proxyauthenticationrequired","excon::errors::proxyconnectionerror","excon::errors::proxyparseerror","excon::errors::requestentitytoolarge","excon::errors::requesttimeout","excon::errors::requesturitoolong","excon::errors::requestedrangenotsatisfiable","excon::errors::resetcontent","excon::errors::seeother","excon::errors::serviceunavailable","excon::errors::socketerror","excon::errors::stubnotfound","excon::errors::switchingprotocols","excon::errors::temporaryredirect","excon::errors::timeout","excon::errors::unauthorized","excon::errors::unprocessableentity","excon::errors::unsupportedmediatype","excon::errors::useproxy","excon::response","excon::sslsocket","excon::socket","excon::standardinstrumentor","io","io::waitreadable","io::waitwritable","excon::response#attributes()","excon::sslsocket#connect()","excon::socket#connect()","excon::defaults()","excon::defaults=()","excon::response#get_header()","excon::connection#inspect()","excon::standardinstrumentor::instrument()","excon::mock()","excon::mock=()","excon::new()","excon::connection::new()","excon::errors::httpstatuserror::new()","excon::errors::socketerror::new()","excon::response::new()","excon::sslsocket::new()","excon::socket::new()","excon::response::parse()","excon::sslsocket#read()","excon::socket#read()","excon::connection#request()","excon::connection#reset()","excon::connection#retry_limit()","excon::connection#retry_limit=()","excon::ssl_ca_path()","excon::ssl_ca_path=()","excon::ssl_verify_peer()","excon::ssl_verify_peer=()","excon::errors::status_error()","excon::stub()","excon::stubs()","excon::sslsocket#write()","excon::socket#write()"],"info":[["Excon","","Excon.html","","<p>Define defaults first so they will be available to other files\n"],["Excon::Connection","","Excon/Connection.html","",""],["Excon::Errors","","Excon/Errors.html","",""],["Excon::Errors::Accepted","","Excon/Errors/Accepted.html","",""],["Excon::Errors::BadGateway","","Excon/Errors/BadGateway.html","",""],["Excon::Errors::BadRequest","","Excon/Errors/BadRequest.html","",""],["Excon::Errors::Conflict","","Excon/Errors/Conflict.html","",""],["Excon::Errors::Continue","","Excon/Errors/Continue.html","",""],["Excon::Errors::Created","","Excon/Errors/Created.html","",""],["Excon::Errors::Error","","Excon/Errors/Error.html","",""],["Excon::Errors::ExpectationFailed","","Excon/Errors/ExpectationFailed.html","",""],["Excon::Errors::Forbidden","","Excon/Errors/Forbidden.html","",""],["Excon::Errors::Found","","Excon/Errors/Found.html","",""],["Excon::Errors::GatewayTimeout","","Excon/Errors/GatewayTimeout.html","",""],["Excon::Errors::Gone","","Excon/Errors/Gone.html","",""],["Excon::Errors::HTTPStatusError","","Excon/Errors/HTTPStatusError.html","",""],["Excon::Errors::InternalServerError","","Excon/Errors/InternalServerError.html","",""],["Excon::Errors::LengthRequired","","Excon/Errors/LengthRequired.html","",""],["Excon::Errors::MethodNotAllowed","","Excon/Errors/MethodNotAllowed.html","",""],["Excon::Errors::MovedPermanently","","Excon/Errors/MovedPermanently.html","",""],["Excon::Errors::MultipleChoices","","Excon/Errors/MultipleChoices.html","",""],["Excon::Errors::NoContent","","Excon/Errors/NoContent.html","",""],["Excon::Errors::NonAuthoritativeInformation","","Excon/Errors/NonAuthoritativeInformation.html","",""],["Excon::Errors::NotAcceptable","","Excon/Errors/NotAcceptable.html","",""],["Excon::Errors::NotFound","","Excon/Errors/NotFound.html","",""],["Excon::Errors::NotImplemented","","Excon/Errors/NotImplemented.html","",""],["Excon::Errors::NotModified","","Excon/Errors/NotModified.html","",""],["Excon::Errors::OK","","Excon/Errors/OK.html","",""],["Excon::Errors::PartialContent","","Excon/Errors/PartialContent.html","",""],["Excon::Errors::PaymentRequired","","Excon/Errors/PaymentRequired.html","",""],["Excon::Errors::PreconditionFailed","","Excon/Errors/PreconditionFailed.html","",""],["Excon::Errors::ProxyAuthenticationRequired","","Excon/Errors/ProxyAuthenticationRequired.html","",""],["Excon::Errors::ProxyConnectionError","","Excon/Errors/ProxyConnectionError.html","",""],["Excon::Errors::ProxyParseError","","Excon/Errors/ProxyParseError.html","",""],["Excon::Errors::RequestEntityTooLarge","","Excon/Errors/RequestEntityTooLarge.html","",""],["Excon::Errors::RequestTimeout","","Excon/Errors/RequestTimeout.html","",""],["Excon::Errors::RequestURITooLong","","Excon/Errors/RequestURITooLong.html","",""],["Excon::Errors::RequestedRangeNotSatisfiable","","Excon/Errors/RequestedRangeNotSatisfiable.html","",""],["Excon::Errors::ResetContent","","Excon/Errors/ResetContent.html","",""],["Excon::Errors::SeeOther","","Excon/Errors/SeeOther.html","",""],["Excon::Errors::ServiceUnavailable","","Excon/Errors/ServiceUnavailable.html","",""],["Excon::Errors::SocketError","","Excon/Errors/SocketError.html","",""],["Excon::Errors::StubNotFound","","Excon/Errors/StubNotFound.html","",""],["Excon::Errors::SwitchingProtocols","","Excon/Errors/SwitchingProtocols.html","",""],["Excon::Errors::TemporaryRedirect","","Excon/Errors/TemporaryRedirect.html","",""],["Excon::Errors::Timeout","","Excon/Errors/Timeout.html","",""],["Excon::Errors::Unauthorized","","Excon/Errors/Unauthorized.html","",""],["Excon::Errors::UnprocessableEntity","","Excon/Errors/UnprocessableEntity.html","",""],["Excon::Errors::UnsupportedMediaType","","Excon/Errors/UnsupportedMediaType.html","",""],["Excon::Errors::UseProxy","","Excon/Errors/UseProxy.html","",""],["Excon::Response","","Excon/Response.html","",""],["Excon::SSLSocket","","Excon/SSLSocket.html","",""],["Excon::Socket","","Excon/Socket.html","",""],["Excon::StandardInstrumentor","","Excon/StandardInstrumentor.html","",""],["IO","","IO.html","",""],["IO::WaitReadable","","IO/WaitReadable.html","",""],["IO::WaitWritable","","IO/WaitWritable.html","",""],["attributes","Excon::Response","Excon/Response.html#method-i-attributes","()",""],["connect","Excon::SSLSocket","Excon/SSLSocket.html#method-i-connect","()",""],["connect","Excon::Socket","Excon/Socket.html#method-i-connect","()",""],["defaults","Excon","Excon.html#method-c-defaults","()","<p>@return [Hash] defaults for Excon connections\n"],["defaults=","Excon","Excon.html#method-c-defaults-3D","(new_defaults)","<p>Change defaults for Excon connections @return [Hash] defaults for Excon\nconnections\n"],["get_header","Excon::Response","Excon/Response.html#method-i-get_header","(name)","<p>Retrieve a specific header value. Header names are treated\ncase-insensitively.\n\n<pre>@param [String] name Header ...</pre>\n"],["inspect","Excon::Connection","Excon/Connection.html#method-i-inspect","()",""],["instrument","Excon::StandardInstrumentor","Excon/StandardInstrumentor.html#method-c-instrument","(name, params = {}, &block)",""],["mock","Excon","Excon.html#method-c-mock","()","<p>Status of mocking\n"],["mock=","Excon","Excon.html#method-c-mock-3D","(new_mock)","<p>Change the status of mocking false is the default and works as expected\ntrue returns a value from stubs â€¦\n"],["new","Excon","Excon.html#method-c-new","(url, params = {})","<p>@see Connection#initialize Initializes a new keep-alive session for a given\nremote host\n\n<pre>@param [String] ...</pre>\n"],["new","Excon::Connection","Excon/Connection.html#method-c-new","(url, params = {})","<p>Initializes a new Connection instance\n\n<pre>@param [String] url The destination URL\n@param [Hash&lt;Symbol, &gt;] ...</pre>\n"],["new","Excon::Errors::HTTPStatusError","Excon/Errors/HTTPStatusError.html#method-c-new","(msg, request = nil, response = nil)",""],["new","Excon::Errors::SocketError","Excon/Errors/SocketError.html#method-c-new","(socket_error=nil)",""],["new","Excon::Response","Excon/Response.html#method-c-new","(attrs={})",""],["new","Excon::SSLSocket","Excon/SSLSocket.html#method-c-new","(params = {}, proxy = nil)",""],["new","Excon::Socket","Excon/Socket.html#method-c-new","(params = {}, proxy = nil)",""],["parse","Excon::Response","Excon/Response.html#method-c-parse","(socket, params={})",""],["read","Excon::SSLSocket","Excon/SSLSocket.html#method-i-read","(max_length=nil)",""],["read","Excon::Socket","Excon/Socket.html#method-i-read","(max_length=nil)",""],["request","Excon::Connection","Excon/Connection.html#method-i-request","(params, &block)","<p>Sends the supplied request to the destination host.\n\n<pre>@yield [chunk] @see Response#self.parse\n@param [Hash&lt;Symbol, ...</pre>\n"],["reset","Excon::Connection","Excon/Connection.html#method-i-reset","()",""],["retry_limit","Excon::Connection","Excon/Connection.html#method-i-retry_limit","()",""],["retry_limit=","Excon::Connection","Excon/Connection.html#method-i-retry_limit-3D","(new_retry_limit)",""],["ssl_ca_path","Excon","Excon.html#method-c-ssl_ca_path","()","<p>@return [String] The filesystem path to the SSL Certificate Authority\n"],["ssl_ca_path=","Excon","Excon.html#method-c-ssl_ca_path-3D","(new_ssl_ca_path)","<p>Change path to the SSL Certificate Authority @return [String] The\nfilesystem path to the SSL Certificate â€¦\n"],["ssl_verify_peer","Excon","Excon.html#method-c-ssl_verify_peer","()","<p>@return [true, false] Whether or not to verify the peerâ€™s SSL certificate /\nchain\n"],["ssl_verify_peer=","Excon","Excon.html#method-c-ssl_verify_peer-3D","(new_ssl_verify_peer)","<p>Change the status of ssl peer verification @see Excon#ssl_verify_peer\n(attr_reader)\n"],["status_error","Excon::Errors","Excon/Errors.html#method-c-status_error","(request, response)","<p>Messages for nicer exceptions, from rfc2616\n"],["stub","Excon","Excon.html#method-c-stub","(request_params = {}, response_params = nil)","<p>push an additional stub onto the list to check for mock requests\n\n<pre>@param [Hash&lt;Symbol, &gt;] request params ...</pre>\n"],["stubs","Excon","Excon.html#method-c-stubs","()","<p>get a list of defined stubs\n"],["write","Excon::SSLSocket","Excon/SSLSocket.html#method-i-write","(data)",""],["write","Excon::Socket","Excon/Socket.html#method-i-write","(data)",""]]}}