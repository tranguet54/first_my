var search_data = {"index":{"searchIndex":["heroku","api","errors","error","errorwithresponse","forbidden","locked","nilapp","notfound","requestfailed","timeout","unauthorized","verificationrequired","mock","okjson","error","utf8error","abbrev()","add_mock_app_addon()","add_mock_release()","arrenc()","arrparse()","decode()","delete_addon()","delete_app()","delete_collaborator()","delete_config_var()","delete_domain()","delete_domains()","delete_feature()","delete_key()","delete_keys()","delete_ssl_endpoint()","eat()","encode()","falsetok()","get_addons()","get_app()","get_app_maintenance()","get_apps()","get_attachments()","get_collaborators()","get_config_vars()","get_domains()","get_feature()","get_features()","get_keys()","get_logs()","get_mock_addon()","get_mock_addon_price()","get_mock_app()","get_mock_app_addon()","get_mock_app_domain()","get_mock_collaborator()","get_mock_feature()","get_mock_key()","get_mock_processes()","get_ps()","get_release()","get_releases()","get_ssl_endpoint()","get_ssl_endpoints()","get_stack()","get_user()","hexdec4()","keyenc()","lex()","new()","new()","nibble()","nulltok()","numenc()","numtok()","objenc()","objparse()","pairparse()","parse_stub_params()","post_addon()","post_app()","post_app_maintenance()","post_collaborator()","post_domain()","post_feature()","post_key()","post_login()","post_ps()","post_ps_restart()","post_ps_scale()","post_ps_stop()","post_release()","post_ssl_endpoint()","post_ssl_endpoint_rollback()","put_addon()","put_app()","put_config_vars()","put_dynos()","put_ssl_endpoint()","put_stack()","put_workers()","remove_mock_app_addon()","request()","strenc()","strtok()","subst()","surrogate?()","textparse()","timestamp()","tok()","truetok()","ucharcopy()","ucharenc()","unescape()","unquote()","valenc()","valparse()","with_mock_app()"],"longSearchIndex":["heroku","heroku::api","heroku::api::errors","heroku::api::errors::error","heroku::api::errors::errorwithresponse","heroku::api::errors::forbidden","heroku::api::errors::locked","heroku::api::errors::nilapp","heroku::api::errors::notfound","heroku::api::errors::requestfailed","heroku::api::errors::timeout","heroku::api::errors::unauthorized","heroku::api::errors::verificationrequired","heroku::api::mock","heroku::api::okjson","heroku::api::okjson::error","heroku::api::okjson::utf8error","heroku::api::okjson#abbrev()","heroku::api::mock::add_mock_app_addon()","heroku::api::mock::add_mock_release()","heroku::api::okjson#arrenc()","heroku::api::okjson#arrparse()","heroku::api::okjson#decode()","heroku::api#delete_addon()","heroku::api#delete_app()","heroku::api#delete_collaborator()","heroku::api#delete_config_var()","heroku::api#delete_domain()","heroku::api#delete_domains()","heroku::api#delete_feature()","heroku::api#delete_key()","heroku::api#delete_keys()","heroku::api#delete_ssl_endpoint()","heroku::api::okjson#eat()","heroku::api::okjson#encode()","heroku::api::okjson#falsetok()","heroku::api#get_addons()","heroku::api#get_app()","heroku::api#get_app_maintenance()","heroku::api#get_apps()","heroku::api#get_attachments()","heroku::api#get_collaborators()","heroku::api#get_config_vars()","heroku::api#get_domains()","heroku::api#get_feature()","heroku::api#get_features()","heroku::api#get_keys()","heroku::api#get_logs()","heroku::api::mock::get_mock_addon()","heroku::api::mock::get_mock_addon_price()","heroku::api::mock::get_mock_app()","heroku::api::mock::get_mock_app_addon()","heroku::api::mock::get_mock_app_domain()","heroku::api::mock::get_mock_collaborator()","heroku::api::mock::get_mock_feature()","heroku::api::mock::get_mock_key()","heroku::api::mock::get_mock_processes()","heroku::api#get_ps()","heroku::api#get_release()","heroku::api#get_releases()","heroku::api#get_ssl_endpoint()","heroku::api#get_ssl_endpoints()","heroku::api#get_stack()","heroku::api#get_user()","heroku::api::okjson#hexdec4()","heroku::api::okjson#keyenc()","heroku::api::okjson#lex()","heroku::api::new()","heroku::api::errors::errorwithresponse::new()","heroku::api::okjson#nibble()","heroku::api::okjson#nulltok()","heroku::api::okjson#numenc()","heroku::api::okjson#numtok()","heroku::api::okjson#objenc()","heroku::api::okjson#objparse()","heroku::api::okjson#pairparse()","heroku::api::mock::parse_stub_params()","heroku::api#post_addon()","heroku::api#post_app()","heroku::api#post_app_maintenance()","heroku::api#post_collaborator()","heroku::api#post_domain()","heroku::api#post_feature()","heroku::api#post_key()","heroku::api#post_login()","heroku::api#post_ps()","heroku::api#post_ps_restart()","heroku::api#post_ps_scale()","heroku::api#post_ps_stop()","heroku::api#post_release()","heroku::api#post_ssl_endpoint()","heroku::api#post_ssl_endpoint_rollback()","heroku::api#put_addon()","heroku::api#put_app()","heroku::api#put_config_vars()","heroku::api#put_dynos()","heroku::api#put_ssl_endpoint()","heroku::api#put_stack()","heroku::api#put_workers()","heroku::api::mock::remove_mock_app_addon()","heroku::api#request()","heroku::api::okjson#strenc()","heroku::api::okjson#strtok()","heroku::api::okjson#subst()","heroku::api::okjson#surrogate?()","heroku::api::okjson#textparse()","heroku::api::mock::timestamp()","heroku::api::okjson#tok()","heroku::api::okjson#truetok()","heroku::api::okjson#ucharcopy()","heroku::api::okjson#ucharenc()","heroku::api::mock::unescape()","heroku::api::okjson#unquote()","heroku::api::okjson#valenc()","heroku::api::okjson#valparse()","heroku::api::mock::with_mock_app()"],"info":[["Heroku","","Heroku.html","","<p>Some parts adapted from golang.org/src/pkg/json/decode.go and\ngolang.org/src/pkg/utf8/utf8.go\n"],["Heroku::API","","Heroku/API.html","",""],["Heroku::API::Errors","","Heroku/API/Errors.html","",""],["Heroku::API::Errors::Error","","Heroku/API/Errors/Error.html","",""],["Heroku::API::Errors::ErrorWithResponse","","Heroku/API/Errors/ErrorWithResponse.html","",""],["Heroku::API::Errors::Forbidden","","Heroku/API/Errors/Forbidden.html","",""],["Heroku::API::Errors::Locked","","Heroku/API/Errors/Locked.html","",""],["Heroku::API::Errors::NilApp","","Heroku/API/Errors/NilApp.html","",""],["Heroku::API::Errors::NotFound","","Heroku/API/Errors/NotFound.html","",""],["Heroku::API::Errors::RequestFailed","","Heroku/API/Errors/RequestFailed.html","",""],["Heroku::API::Errors::Timeout","","Heroku/API/Errors/Timeout.html","",""],["Heroku::API::Errors::Unauthorized","","Heroku/API/Errors/Unauthorized.html","",""],["Heroku::API::Errors::VerificationRequired","","Heroku/API/Errors/VerificationRequired.html","",""],["Heroku::API::Mock","","Heroku/API/Mock.html","",""],["Heroku::API::OkJson","","Heroku/API/OkJson.html","",""],["Heroku::API::OkJson::Error","","Heroku/API/OkJson/Error.html","",""],["Heroku::API::OkJson::Utf8Error","","Heroku/API/OkJson/Utf8Error.html","",""],["abbrev","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-abbrev","(s)",""],["add_mock_app_addon","Heroku::API::Mock","Heroku/API/Mock.html#method-c-add_mock_app_addon","(mock_data, app, addon)",""],["add_mock_release","Heroku::API::Mock","Heroku/API/Mock.html#method-c-add_mock_release","(mock_data, app, release_data)",""],["arrenc","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-arrenc","(a)",""],["arrparse","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-arrparse","(ts)","<p>Parses an “array” in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. …\n"],["decode","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-decode","(s)","<p>Decodes a json document in string s and returns the corresponding ruby\nvalue. String s must be valid …\n"],["delete_addon","Heroku::API","Heroku/API.html#method-i-delete_addon","(app, addon)","<p>DELETE /apps/:app/addons/:addon\n"],["delete_app","Heroku::API","Heroku/API.html#method-i-delete_app","(app)","<p>DELETE /apps/:app\n"],["delete_collaborator","Heroku::API","Heroku/API.html#method-i-delete_collaborator","(app, email)","<p>DELETE /apps/:app/collaborators/:email\n"],["delete_config_var","Heroku::API","Heroku/API.html#method-i-delete_config_var","(app, key)","<p>DELETE /apps/:app/config_vars/:key\n"],["delete_domain","Heroku::API","Heroku/API.html#method-i-delete_domain","(app, domain)","<p>DELETE /apps/:app/domains/:domain\n"],["delete_domains","Heroku::API","Heroku/API.html#method-i-delete_domains","(app)","<p>DELETE /apps/:app/domains\n"],["delete_feature","Heroku::API","Heroku/API.html#method-i-delete_feature","(feature, app = nil)","<p>DELETE /features/:feature\n"],["delete_key","Heroku::API","Heroku/API.html#method-i-delete_key","(key)","<p>DELETE /user/keys/:key\n"],["delete_keys","Heroku::API","Heroku/API.html#method-i-delete_keys","()","<p>DELETE /user/keys\n"],["delete_ssl_endpoint","Heroku::API","Heroku/API.html#method-i-delete_ssl_endpoint","(app, cname)","<p>DELETE /apps/:app/ssl-endpoint/:cname\n"],["eat","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-eat","(typ, ts)",""],["encode","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-encode","(x)","<p>Encodes x into a json text. It may contain only Array, Hash, String,\nNumeric, true, false, nil. (Note …\n"],["falsetok","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-falsetok","(s)",""],["get_addons","Heroku::API","Heroku/API.html#method-i-get_addons","(app=nil)","<p>GET /addons GET /apps/:app/addons\n"],["get_app","Heroku::API","Heroku/API.html#method-i-get_app","(app)","<p>GET /apps/:app\n"],["get_app_maintenance","Heroku::API","Heroku/API.html#method-i-get_app_maintenance","(app)","<p>GET /apps/:app/server/maintenance\n"],["get_apps","Heroku::API","Heroku/API.html#method-i-get_apps","()","<p>GET /apps\n"],["get_attachments","Heroku::API","Heroku/API.html#method-i-get_attachments","(app)","<p>GET /apps/:app/attachments\n"],["get_collaborators","Heroku::API","Heroku/API.html#method-i-get_collaborators","(app)","<p>GET /apps/:app/collaborators\n"],["get_config_vars","Heroku::API","Heroku/API.html#method-i-get_config_vars","(app)","<p>GET /apps/:app/config_vars\n"],["get_domains","Heroku::API","Heroku/API.html#method-i-get_domains","(app)","<p>GET /apps/:app/domains\n"],["get_feature","Heroku::API","Heroku/API.html#method-i-get_feature","(feature, app = nil)","<p>GET /features/:feature\n"],["get_features","Heroku::API","Heroku/API.html#method-i-get_features","(app = nil)","<p>GET /features\n"],["get_keys","Heroku::API","Heroku/API.html#method-i-get_keys","()","<p>GET /user/keys\n"],["get_logs","Heroku::API","Heroku/API.html#method-i-get_logs","(app, options = {})","<p>GET /apps/:app/logs\n"],["get_mock_addon","Heroku::API::Mock","Heroku/API/Mock.html#method-c-get_mock_addon","(mock_data, addon)",""],["get_mock_addon_price","Heroku::API::Mock","Heroku/API/Mock.html#method-c-get_mock_addon_price","(mock_data, addon)",""],["get_mock_app","Heroku::API::Mock","Heroku/API/Mock.html#method-c-get_mock_app","(mock_data, app)",""],["get_mock_app_addon","Heroku::API::Mock","Heroku/API/Mock.html#method-c-get_mock_app_addon","(mock_data, app, addon)",""],["get_mock_app_domain","Heroku::API::Mock","Heroku/API/Mock.html#method-c-get_mock_app_domain","(mock_data, app, domain)",""],["get_mock_collaborator","Heroku::API::Mock","Heroku/API/Mock.html#method-c-get_mock_collaborator","(mock_data, app, email)",""],["get_mock_feature","Heroku::API::Mock","Heroku/API/Mock.html#method-c-get_mock_feature","(mock_data, feature)",""],["get_mock_key","Heroku::API::Mock","Heroku/API/Mock.html#method-c-get_mock_key","(mock_data, key)",""],["get_mock_processes","Heroku::API::Mock","Heroku/API/Mock.html#method-c-get_mock_processes","(mock_data, app)",""],["get_ps","Heroku::API","Heroku/API.html#method-i-get_ps","(app)","<p>GET /apps/:app/ps\n"],["get_release","Heroku::API","Heroku/API.html#method-i-get_release","(app, release)","<p>GET /apps/:app/releases/:release\n"],["get_releases","Heroku::API","Heroku/API.html#method-i-get_releases","(app)","<p>GET /apps/:app/releases\n"],["get_ssl_endpoint","Heroku::API","Heroku/API.html#method-i-get_ssl_endpoint","(app, cname)","<p>GET /apps/:app/ssl-endpoint/:cname\n"],["get_ssl_endpoints","Heroku::API","Heroku/API.html#method-i-get_ssl_endpoints","(app)","<p>GET /apps/:app/ssl-endpoints\n"],["get_stack","Heroku::API","Heroku/API.html#method-i-get_stack","(app)",""],["get_user","Heroku::API","Heroku/API.html#method-i-get_user","()","<p>GET /user\n"],["hexdec4","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-hexdec4","(s)",""],["keyenc","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-keyenc","(k)",""],["lex","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-lex","(s)","<p>Scans s and returns a list of json tokens, excluding white space (as\ndefined in RFC 4627).\n"],["new","Heroku::API","Heroku/API.html#method-c-new","(options={})",""],["new","Heroku::API::Errors::ErrorWithResponse","Heroku/API/Errors/ErrorWithResponse.html#method-c-new","(message, response)",""],["nibble","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-nibble","(c)",""],["nulltok","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-nulltok","(s)",""],["numenc","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-numenc","(x)",""],["numtok","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-numtok","(s)",""],["objenc","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-objenc","(x)",""],["objparse","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-objparse","(ts)","<p>Parses an “object” in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. …\n"],["pairparse","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-pairparse","(ts)","<p>Parses a “member” in the sense of RFC 4627. Returns the parsed values and\nany trailing tokens. …\n"],["parse_stub_params","Heroku::API::Mock","Heroku/API/Mock.html#method-c-parse_stub_params","(params)",""],["post_addon","Heroku::API","Heroku/API.html#method-i-post_addon","(app, addon, config = {})","<p>POST /apps/:app/addons/:addon\n"],["post_app","Heroku::API","Heroku/API.html#method-i-post_app","(params={})","<p>POST /apps\n"],["post_app_maintenance","Heroku::API","Heroku/API.html#method-i-post_app_maintenance","(app, maintenance_mode)","<p>POST /apps/:app/server/maintenance\n"],["post_collaborator","Heroku::API","Heroku/API.html#method-i-post_collaborator","(app, email)","<p>POST /apps/:app/collaborators\n"],["post_domain","Heroku::API","Heroku/API.html#method-i-post_domain","(app, domain)","<p>POST /apps/:app/domains\n"],["post_feature","Heroku::API","Heroku/API.html#method-i-post_feature","(feature, app = nil)","<p>POST /features/:feature\n"],["post_key","Heroku::API","Heroku/API.html#method-i-post_key","(key)","<p>POST /user/keys\n"],["post_login","Heroku::API","Heroku/API.html#method-i-post_login","(username, password)",""],["post_ps","Heroku::API","Heroku/API.html#method-i-post_ps","(app, command, options={})","<p>POST /apps/:app/ps\n"],["post_ps_restart","Heroku::API","Heroku/API.html#method-i-post_ps_restart","(app, options={})","<p>POST /apps/:app/ps/restart\n"],["post_ps_scale","Heroku::API","Heroku/API.html#method-i-post_ps_scale","(app, type, quantity)","<p>POST /apps/:app/ps/scale\n"],["post_ps_stop","Heroku::API","Heroku/API.html#method-i-post_ps_stop","(app, options)","<p>POST /apps/:app/ps/stop\n"],["post_release","Heroku::API","Heroku/API.html#method-i-post_release","(app, release=nil)","<p>POST /apps/:app/releases/:release\n"],["post_ssl_endpoint","Heroku::API","Heroku/API.html#method-i-post_ssl_endpoint","(app, pem, key)","<p>POST /apps/:app/ssl-endpoints\n"],["post_ssl_endpoint_rollback","Heroku::API","Heroku/API.html#method-i-post_ssl_endpoint_rollback","(app, cname)","<p>POST /apps/:app/ssl-endpoints/:cname/rollback\n"],["put_addon","Heroku::API","Heroku/API.html#method-i-put_addon","(app, addon, config = {})","<p>PUT /apps/:app/addons/:addon\n"],["put_app","Heroku::API","Heroku/API.html#method-i-put_app","(app, params)","<p>PUT /apps/:app\n"],["put_config_vars","Heroku::API","Heroku/API.html#method-i-put_config_vars","(app, vars)","<p>PUT /apps/:app/config_vars\n"],["put_dynos","Heroku::API","Heroku/API.html#method-i-put_dynos","(app, dynos)","<p>PUT /apps/:app/dynos\n"],["put_ssl_endpoint","Heroku::API","Heroku/API.html#method-i-put_ssl_endpoint","(app, cname, pem, key)","<p>PUT /apps/:app/ssl-endpoints/:cname\n"],["put_stack","Heroku::API","Heroku/API.html#method-i-put_stack","(app, stack)",""],["put_workers","Heroku::API","Heroku/API.html#method-i-put_workers","(app, workers)","<p>PUT /apps/:app/workers\n"],["remove_mock_app_addon","Heroku::API::Mock","Heroku/API/Mock.html#method-c-remove_mock_app_addon","(mock_data, app, addon)",""],["request","Heroku::API","Heroku/API.html#method-i-request","(params, &block)",""],["strenc","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-strenc","(s)",""],["strtok","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-strtok","(s)",""],["subst","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-subst","(u1, u2)",""],["surrogate?","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-surrogate-3F","(u)",""],["textparse","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-textparse","(ts)","<p>Parses a “json text” in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. …\n"],["timestamp","Heroku::API::Mock","Heroku/API/Mock.html#method-c-timestamp","()",""],["tok","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-tok","(s)","<p>Scans the first token in s and returns a 3-element list, or nil if s does\nnot begin with a valid token. …\n"],["truetok","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-truetok","(s)",""],["ucharcopy","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-ucharcopy","(t, s, i)","<p>Copies the valid UTF-8 bytes of a single character from string s at\nposition i to I/O object t, and returns …\n"],["ucharenc","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-ucharenc","(a, i, u)","<p>Encodes unicode character u as UTF-8 bytes in string a at position i.\nReturns the number of bytes written. …\n"],["unescape","Heroku::API::Mock","Heroku/API/Mock.html#method-c-unescape","(string)",""],["unquote","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-unquote","(q)","<p>Converts a quoted json string literal q into a UTF-8-encoded string. The\nrules are different than for …\n"],["valenc","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-valenc","(x)",""],["valparse","Heroku::API::OkJson","Heroku/API/OkJson.html#method-i-valparse","(ts)","<p>Parses a “value” in the sense of RFC 4627. Returns the parsed value and any\ntrailing tokens. …\n"],["with_mock_app","Heroku::API::Mock","Heroku/API/Mock.html#method-c-with_mock_app","(mock_data, app, &block)",""]]}}