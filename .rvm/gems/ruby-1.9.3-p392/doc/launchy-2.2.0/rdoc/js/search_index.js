var search_data = {"index":{"searchIndex":["launchy","application","browser","applicationnotfounderror","argumenterror","browser","cli","commandnotfounderror","descendanttracker","detect","hostos","hostosfamily","cygwin","darwin","nix","notfounderror","windows","nixdesktopenvironment","fluxbox","gnome","kde","notfounderror","xfce","rubyengine","jruby","macruby","mri","notfounderror","rbx","runner","forkable","jruby","notfounderror","windows","error","osfamily","version","all_args()","app_for_uri()","app_for_uri_string()","app_list()","app_list()","app_list()","app_list()","app_list()","application()","application=()","browser()","browser()","browser()","browser()","browser_cmdline()","browser_env()","bug_report_message()","children()","cmd_and_args()","commandline_normalize()","cygwin?()","cygwin?()","cygwin_app_list()","darwin?()","darwin?()","darwin_app_list()","debug=()","debug?()","default_host_os()","detect()","detect()","detect()","detect()","dry_run()","dry_run()","dry_run=()","dry_run?()","engine_name()","engine_name()","engine_name()","engine_name()","error_output()","extract_global_options()","fallback_browsers()","find_child()","find_executable()","find_executable()","good_run()","handles?()","handling()","host_os()","host_os=()","inherited()","is_current_desktop_environment?()","is_current_desktop_environment?()","is_current_desktop_environment?()","is_current_desktop_environment?()","is_current_engine?()","is_current_engine?()","jruby?()","log()","macruby?()","matches?()","matching_regex()","matching_regex()","matching_regex()","matching_regex()","mri?()","new()","new()","new()","new()","new()","nix?()","nix?()","nix_app_list()","open()","open()","override_host_os()","parse()","parser()","rbx?()","reset_global_options()","ruby_engine()","ruby_engine=()","ruby_engine_error_message()","run()","run()","run()","run()","schemes()","shell_commands()","shell_commands()","string_to_uri()","to_a()","to_s()","visit()","wet_run()","wet_run()","wet_run()","windows?()","windows?()","windows_app_list()","history","manifest","readme"],"longSearchIndex":["launchy","launchy::application","launchy::application::browser","launchy::applicationnotfounderror","launchy::argumenterror","launchy::browser","launchy::cli","launchy::commandnotfounderror","launchy::descendanttracker","launchy::detect","launchy::detect::hostos","launchy::detect::hostosfamily","launchy::detect::hostosfamily::cygwin","launchy::detect::hostosfamily::darwin","launchy::detect::hostosfamily::nix","launchy::detect::hostosfamily::notfounderror","launchy::detect::hostosfamily::windows","launchy::detect::nixdesktopenvironment","launchy::detect::nixdesktopenvironment::fluxbox","launchy::detect::nixdesktopenvironment::gnome","launchy::detect::nixdesktopenvironment::kde","launchy::detect::nixdesktopenvironment::notfounderror","launchy::detect::nixdesktopenvironment::xfce","launchy::detect::rubyengine","launchy::detect::rubyengine::jruby","launchy::detect::rubyengine::macruby","launchy::detect::rubyengine::mri","launchy::detect::rubyengine::notfounderror","launchy::detect::rubyengine::rbx","launchy::detect::runner","launchy::detect::runner::forkable","launchy::detect::runner::jruby","launchy::detect::runner::notfounderror","launchy::detect::runner::windows","launchy::error","launchy::osfamily","launchy::version","launchy::detect::runner::windows#all_args()","launchy::app_for_uri()","launchy::app_for_uri_string()","launchy::application::browser#app_list()","launchy::detect::hostosfamily::cygwin#app_list()","launchy::detect::hostosfamily::darwin#app_list()","launchy::detect::hostosfamily::nix#app_list()","launchy::detect::hostosfamily::windows#app_list()","launchy::application()","launchy::application=()","launchy::detect::nixdesktopenvironment::fluxbox::browser()","launchy::detect::nixdesktopenvironment::gnome::browser()","launchy::detect::nixdesktopenvironment::kde::browser()","launchy::detect::nixdesktopenvironment::xfce::browser()","launchy::application::browser#browser_cmdline()","launchy::application::browser#browser_env()","launchy::bug_report_message()","launchy::descendanttracker#children()","launchy::application::browser#cmd_and_args()","launchy::detect::runner#commandline_normalize()","launchy::detect::hostosfamily#cygwin?()","launchy::detect::hostosfamily::cygwin?()","launchy::application::browser#cygwin_app_list()","launchy::detect::hostosfamily#darwin?()","launchy::detect::hostosfamily::darwin?()","launchy::application::browser#darwin_app_list()","launchy::debug=()","launchy::debug?()","launchy::detect::hostos#default_host_os()","launchy::detect::hostosfamily::detect()","launchy::detect::nixdesktopenvironment::detect()","launchy::detect::rubyengine::detect()","launchy::detect::runner::detect()","launchy::detect::runner#dry_run()","launchy::detect::runner::windows#dry_run()","launchy::dry_run=()","launchy::dry_run?()","launchy::detect::rubyengine::jruby::engine_name()","launchy::detect::rubyengine::macruby::engine_name()","launchy::detect::rubyengine::mri::engine_name()","launchy::detect::rubyengine::rbx::engine_name()","launchy::cli#error_output()","launchy::extract_global_options()","launchy::detect::nixdesktopenvironment::fallback_browsers()","launchy::descendanttracker#find_child()","launchy::application::find_executable()","launchy::application#find_executable()","launchy::cli#good_run()","launchy::application::browser::handles?()","launchy::application::handling()","launchy::host_os()","launchy::host_os=()","launchy::descendanttracker#inherited()","launchy::detect::nixdesktopenvironment::fluxbox::is_current_desktop_environment?()","launchy::detect::nixdesktopenvironment::gnome::is_current_desktop_environment?()","launchy::detect::nixdesktopenvironment::kde::is_current_desktop_environment?()","launchy::detect::nixdesktopenvironment::xfce::is_current_desktop_environment?()","launchy::detect::rubyengine::is_current_engine?()","launchy::detect::rubyengine::mri::is_current_engine?()","launchy::detect::rubyengine::jruby?()","launchy::log()","launchy::detect::rubyengine::macruby?()","launchy::detect::hostosfamily::matches?()","launchy::detect::hostosfamily::cygwin::matching_regex()","launchy::detect::hostosfamily::darwin::matching_regex()","launchy::detect::hostosfamily::nix::matching_regex()","launchy::detect::hostosfamily::windows::matching_regex()","launchy::detect::rubyengine::mri?()","launchy::application::new()","launchy::cli::new()","launchy::detect::hostos::new()","launchy::detect::hostosfamily::new()","launchy::detect::rubyengine::new()","launchy::detect::hostosfamily::nix?()","launchy::detect::hostosfamily#nix?()","launchy::application::browser#nix_app_list()","launchy::open()","launchy::application::browser#open()","launchy::detect::hostos#override_host_os()","launchy::cli#parse()","launchy::cli#parser()","launchy::detect::rubyengine::rbx?()","launchy::reset_global_options()","launchy::ruby_engine()","launchy::ruby_engine=()","launchy::detect::rubyengine::ruby_engine_error_message()","launchy::application#run()","launchy::browser::run()","launchy::cli#run()","launchy::detect::runner#run()","launchy::application::browser::schemes()","launchy::detect::runner#shell_commands()","launchy::detect::runner::windows#shell_commands()","launchy::string_to_uri()","launchy::version::to_a()","launchy::version::to_s()","launchy::browser#visit()","launchy::detect::runner::forkable#wet_run()","launchy::detect::runner::jruby#wet_run()","launchy::detect::runner::windows#wet_run()","launchy::detect::hostosfamily#windows?()","launchy::detect::hostosfamily::windows?()","launchy::application::browser#windows_app_list()","","",""],"info":[["Launchy","","Launchy.html","","<p>The entry point into Launchy. This is the sole supported public API.\n\n<pre>Launchy.open( uri, options = {} )</pre>\n"],["Launchy::Application","","Launchy/Application.html","","<p>Application is the base class of all the application types that launchy may\ninvoke. It essentially defines …\n"],["Launchy::Application::Browser","","Launchy/Application/Browser.html","","<p>The class handling the browser application and all of its schemes\n"],["Launchy::ApplicationNotFoundError","","Launchy/ApplicationNotFoundError.html","",""],["Launchy::ArgumentError","","Launchy/ArgumentError.html","",""],["Launchy::Browser","","Launchy/Browser.html","","<p>This class is deprecated and will be removed\n"],["Launchy::Cli","","Launchy/Cli.html","",""],["Launchy::CommandNotFoundError","","Launchy/CommandNotFoundError.html","",""],["Launchy::DescendantTracker","","Launchy/DescendantTracker.html","","<p>Use by either\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Foo</span>\n  <span class=\"ruby-identifier\">extend</span> <span class=\"ruby-constant\">DescendantTracker</span>\n<span class=\"ruby-keyword\">end</span>\n</pre>\n<p>or\n"],["Launchy::Detect","","Launchy/Detect.html","",""],["Launchy::Detect::HostOs","","Launchy/Detect/HostOs.html","",""],["Launchy::Detect::HostOsFamily","","Launchy/Detect/HostOsFamily.html","","<p>Detect the current host os family\n<p>If the current host familiy cannot be detected then return\nHostOsFamily::Unknown …\n"],["Launchy::Detect::HostOsFamily::Cygwin","","Launchy/Detect/HostOsFamily/Cygwin.html","",""],["Launchy::Detect::HostOsFamily::Darwin","","Launchy/Detect/HostOsFamily/Darwin.html","",""],["Launchy::Detect::HostOsFamily::Nix","","Launchy/Detect/HostOsFamily/Nix.html","",""],["Launchy::Detect::HostOsFamily::NotFoundError","","Launchy/Detect/HostOsFamily/NotFoundError.html","",""],["Launchy::Detect::HostOsFamily::Windows","","Launchy/Detect/HostOsFamily/Windows.html","",""],["Launchy::Detect::NixDesktopEnvironment","","Launchy/Detect/NixDesktopEnvironment.html","","<p>Detect the current desktop environment for *nix machines Currently this is\nLinux centric. The detection …\n"],["Launchy::Detect::NixDesktopEnvironment::Fluxbox","","Launchy/Detect/NixDesktopEnvironment/Fluxbox.html","",""],["Launchy::Detect::NixDesktopEnvironment::Gnome","","Launchy/Detect/NixDesktopEnvironment/Gnome.html","",""],["Launchy::Detect::NixDesktopEnvironment::Kde","","Launchy/Detect/NixDesktopEnvironment/Kde.html","",""],["Launchy::Detect::NixDesktopEnvironment::NotFoundError","","Launchy/Detect/NixDesktopEnvironment/NotFoundError.html","",""],["Launchy::Detect::NixDesktopEnvironment::Xfce","","Launchy/Detect/NixDesktopEnvironment/Xfce.html","",""],["Launchy::Detect::RubyEngine","","Launchy/Detect/RubyEngine.html","",""],["Launchy::Detect::RubyEngine::Jruby","","Launchy/Detect/RubyEngine/Jruby.html","",""],["Launchy::Detect::RubyEngine::MacRuby","","Launchy/Detect/RubyEngine/MacRuby.html","",""],["Launchy::Detect::RubyEngine::Mri","","Launchy/Detect/RubyEngine/Mri.html","","<p>This is the ruby engine if the RUBY_ENGINE constant is not defined\n"],["Launchy::Detect::RubyEngine::NotFoundError","","Launchy/Detect/RubyEngine/NotFoundError.html","",""],["Launchy::Detect::RubyEngine::Rbx","","Launchy/Detect/RubyEngine/Rbx.html","",""],["Launchy::Detect::Runner","","Launchy/Detect/Runner.html","",""],["Launchy::Detect::Runner::Forkable","","Launchy/Detect/Runner/Forkable.html","",""],["Launchy::Detect::Runner::Jruby","","Launchy/Detect/Runner/Jruby.html","",""],["Launchy::Detect::Runner::NotFoundError","","Launchy/Detect/Runner/NotFoundError.html","",""],["Launchy::Detect::Runner::Windows","","Launchy/Detect/Runner/Windows.html","",""],["Launchy::Error","","Launchy/Error.html","",""],["Launchy::OSFamily","","Launchy/OSFamily.html","","<p>Model all the Operating system families that can exist.\n"],["Launchy::Version","","Launchy/Version.html","",""],["all_args","Launchy::Detect::Runner::Windows","Launchy/Detect/Runner/Windows.html#method-i-all_args","( cmd, *args )",""],["app_for_uri","Launchy","Launchy.html#method-c-app_for_uri","( uri )",""],["app_for_uri_string","Launchy","Launchy.html#method-c-app_for_uri_string","( s )",""],["app_list","Launchy::Application::Browser","Launchy/Application/Browser.html#method-i-app_list","()","<p>use a call back mechanism to get the right app_list that is decided by the \nhost_os_family class.\n"],["app_list","Launchy::Detect::HostOsFamily::Cygwin","Launchy/Detect/HostOsFamily/Cygwin.html#method-i-app_list","( app )",""],["app_list","Launchy::Detect::HostOsFamily::Darwin","Launchy/Detect/HostOsFamily/Darwin.html#method-i-app_list","( app )",""],["app_list","Launchy::Detect::HostOsFamily::Nix","Launchy/Detect/HostOsFamily/Nix.html#method-i-app_list","( app )",""],["app_list","Launchy::Detect::HostOsFamily::Windows","Launchy/Detect/HostOsFamily/Windows.html#method-i-app_list","( app )",""],["application","Launchy","Launchy.html#method-c-application","()",""],["application=","Launchy","Launchy.html#method-c-application-3D","( app )",""],["browser","Launchy::Detect::NixDesktopEnvironment::Fluxbox","Launchy/Detect/NixDesktopEnvironment/Fluxbox.html#method-c-browser","()",""],["browser","Launchy::Detect::NixDesktopEnvironment::Gnome","Launchy/Detect/NixDesktopEnvironment/Gnome.html#method-c-browser","()",""],["browser","Launchy::Detect::NixDesktopEnvironment::Kde","Launchy/Detect/NixDesktopEnvironment/Kde.html#method-c-browser","()",""],["browser","Launchy::Detect::NixDesktopEnvironment::Xfce","Launchy/Detect/NixDesktopEnvironment/Xfce.html#method-c-browser","()",""],["browser_cmdline","Launchy::Application::Browser","Launchy/Application/Browser.html#method-i-browser_cmdline","()","<p>Get the full commandline of what we are going to add the uri to\n"],["browser_env","Launchy::Application::Browser","Launchy/Application/Browser.html#method-i-browser_env","()",""],["bug_report_message","Launchy","Launchy.html#method-c-bug_report_message","()",""],["children","Launchy::DescendantTracker","Launchy/DescendantTracker.html#method-i-children","()","<p>The list of children that are registered\n"],["cmd_and_args","Launchy::Application::Browser","Launchy/Application/Browser.html#method-i-cmd_and_args","( uri, options = {} )",""],["commandline_normalize","Launchy::Detect::Runner","Launchy/Detect/Runner.html#method-i-commandline_normalize","( cmdline )",""],["cygwin?","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-i-cygwin-3F","()",""],["cygwin?","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-c-cygwin-3F","()",""],["cygwin_app_list","Launchy::Application::Browser","Launchy/Application/Browser.html#method-i-cygwin_app_list","()",""],["darwin?","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-i-darwin-3F","()",""],["darwin?","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-c-darwin-3F","()",""],["darwin_app_list","Launchy::Application::Browser","Launchy/Application/Browser.html#method-i-darwin_app_list","()",""],["debug=","Launchy","Launchy.html#method-c-debug-3D","( d )",""],["debug?","Launchy","Launchy.html#method-c-debug-3F","()","<p>we may do logging before a call to ‘open’, hence the need to check\nLAUNCHY_DEBUG here\n"],["default_host_os","Launchy::Detect::HostOs","Launchy/Detect/HostOs.html#method-i-default_host_os","()",""],["detect","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-c-detect","( host_os = HostOs.new )",""],["detect","Launchy::Detect::NixDesktopEnvironment","Launchy/Detect/NixDesktopEnvironment.html#method-c-detect","()","<p>Detect the current *nix desktop environment\n<p>If the current dekstop environment be detected, the return …\n"],["detect","Launchy::Detect::RubyEngine","Launchy/Detect/RubyEngine.html#method-c-detect","( ruby_engine = RubyEngine.new )","<p>Detect the current ruby engine.\n<p>If the current ruby engine cannot be detected, the return\nRubyEngine::Unknown …\n"],["detect","Launchy::Detect::Runner","Launchy/Detect/Runner.html#method-c-detect","()","<p>Detect the current command runner\n<p>This will return an instance of the Runner to be used to do the application\n…\n"],["dry_run","Launchy::Detect::Runner","Launchy/Detect/Runner.html#method-i-dry_run","( cmd, *args )",""],["dry_run","Launchy::Detect::Runner::Windows","Launchy/Detect/Runner/Windows.html#method-i-dry_run","( cmd, *args )",""],["dry_run=","Launchy","Launchy.html#method-c-dry_run-3D","( dry_run )",""],["dry_run?","Launchy","Launchy.html#method-c-dry_run-3F","()",""],["engine_name","Launchy::Detect::RubyEngine::Jruby","Launchy/Detect/RubyEngine/Jruby.html#method-c-engine_name","()",""],["engine_name","Launchy::Detect::RubyEngine::MacRuby","Launchy/Detect/RubyEngine/MacRuby.html#method-c-engine_name","()",""],["engine_name","Launchy::Detect::RubyEngine::Mri","Launchy/Detect/RubyEngine/Mri.html#method-c-engine_name","()",""],["engine_name","Launchy::Detect::RubyEngine::Rbx","Launchy/Detect/RubyEngine/Rbx.html#method-c-engine_name","()",""],["error_output","Launchy::Cli","Launchy/Cli.html#method-i-error_output","( error )",""],["extract_global_options","Launchy","Launchy.html#method-c-extract_global_options","( options )",""],["fallback_browsers","Launchy::Detect::NixDesktopEnvironment","Launchy/Detect/NixDesktopEnvironment.html#method-c-fallback_browsers","()",""],["find_child","Launchy::DescendantTracker","Launchy/DescendantTracker.html#method-i-find_child","( method, *args )","<p>Find one of the child classes by calling the given method and passing all\nthe rest of the parameters …\n"],["find_executable","Launchy::Application","Launchy/Application.html#method-c-find_executable","( bin, *paths )","<p>Find the given executable in the available paths\n"],["find_executable","Launchy::Application","Launchy/Application.html#method-i-find_executable","( bin, *paths )",""],["good_run","Launchy::Cli","Launchy/Cli.html#method-i-good_run","( argv, env )",""],["handles?","Launchy::Application::Browser","Launchy/Application/Browser.html#method-c-handles-3F","( uri )",""],["handling","Launchy::Application","Launchy/Application.html#method-c-handling","( uri )","<p>Find the application that handles the given uri.\n<p>returns the Class that can handle the uri\n"],["host_os","Launchy","Launchy.html#method-c-host_os","()",""],["host_os=","Launchy","Launchy.html#method-c-host_os-3D","( host_os )",""],["inherited","Launchy::DescendantTracker","Launchy/DescendantTracker.html#method-i-inherited","( klass )",""],["is_current_desktop_environment?","Launchy::Detect::NixDesktopEnvironment::Fluxbox","Launchy/Detect/NixDesktopEnvironment/Fluxbox.html#method-c-is_current_desktop_environment-3F","()",""],["is_current_desktop_environment?","Launchy::Detect::NixDesktopEnvironment::Gnome","Launchy/Detect/NixDesktopEnvironment/Gnome.html#method-c-is_current_desktop_environment-3F","()",""],["is_current_desktop_environment?","Launchy::Detect::NixDesktopEnvironment::Kde","Launchy/Detect/NixDesktopEnvironment/Kde.html#method-c-is_current_desktop_environment-3F","()",""],["is_current_desktop_environment?","Launchy::Detect::NixDesktopEnvironment::Xfce","Launchy/Detect/NixDesktopEnvironment/Xfce.html#method-c-is_current_desktop_environment-3F","()",""],["is_current_engine?","Launchy::Detect::RubyEngine","Launchy/Detect/RubyEngine.html#method-c-is_current_engine-3F","( ruby_engine )",""],["is_current_engine?","Launchy::Detect::RubyEngine::Mri","Launchy/Detect/RubyEngine/Mri.html#method-c-is_current_engine-3F","( ruby_engine )",""],["jruby?","Launchy::Detect::RubyEngine","Launchy/Detect/RubyEngine.html#method-c-jruby-3F","()",""],["log","Launchy","Launchy.html#method-c-log","(msg)",""],["macruby?","Launchy::Detect::RubyEngine","Launchy/Detect/RubyEngine.html#method-c-macruby-3F","()",""],["matches?","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-c-matches-3F","( host_os )",""],["matching_regex","Launchy::Detect::HostOsFamily::Cygwin","Launchy/Detect/HostOsFamily/Cygwin.html#method-c-matching_regex","()",""],["matching_regex","Launchy::Detect::HostOsFamily::Darwin","Launchy/Detect/HostOsFamily/Darwin.html#method-c-matching_regex","()",""],["matching_regex","Launchy::Detect::HostOsFamily::Nix","Launchy/Detect/HostOsFamily/Nix.html#method-c-matching_regex","()",""],["matching_regex","Launchy::Detect::HostOsFamily::Windows","Launchy/Detect/HostOsFamily/Windows.html#method-c-matching_regex","()",""],["mri?","Launchy::Detect::RubyEngine","Launchy/Detect/RubyEngine.html#method-c-mri-3F","()",""],["new","Launchy::Application","Launchy/Application.html#method-c-new","()",""],["new","Launchy::Cli","Launchy/Cli.html#method-c-new","()",""],["new","Launchy::Detect::HostOs","Launchy/Detect/HostOs.html#method-c-new","( host_os = nil )",""],["new","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-c-new","( host_os = HostOs.new )",""],["new","Launchy::Detect::RubyEngine","Launchy/Detect/RubyEngine.html#method-c-new","( ruby_engine = Launchy.ruby_engine )",""],["nix?","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-c-nix-3F","()",""],["nix?","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-i-nix-3F","()",""],["nix_app_list","Launchy::Application::Browser","Launchy/Application/Browser.html#method-i-nix_app_list","()",""],["open","Launchy","Launchy.html#method-c-open","(uri_s, options = {} )","<p>Launch an application for the given uri string\n"],["open","Launchy::Application::Browser","Launchy/Application/Browser.html#method-i-open","( uri, options = {} )","<p>final assembly of the command and do %s substitution \nwww.catb.org/~esr/BROWSER/index.html\n"],["override_host_os","Launchy::Detect::HostOs","Launchy/Detect/HostOs.html#method-i-override_host_os","()",""],["parse","Launchy::Cli","Launchy/Cli.html#method-i-parse","( argv, env )",""],["parser","Launchy::Cli","Launchy/Cli.html#method-i-parser","()",""],["rbx?","Launchy::Detect::RubyEngine","Launchy/Detect/RubyEngine.html#method-c-rbx-3F","()",""],["reset_global_options","Launchy","Launchy.html#method-c-reset_global_options","()",""],["ruby_engine","Launchy","Launchy.html#method-c-ruby_engine","()",""],["ruby_engine=","Launchy","Launchy.html#method-c-ruby_engine-3D","( ruby_engine )",""],["ruby_engine_error_message","Launchy::Detect::RubyEngine","Launchy/Detect/RubyEngine.html#method-c-ruby_engine_error_message","( ruby_engine )",""],["run","Launchy::Application","Launchy/Application.html#method-i-run","( cmd, *args )",""],["run","Launchy::Browser","Launchy/Browser.html#method-c-run","( *args )",""],["run","Launchy::Cli","Launchy/Cli.html#method-i-run","( argv = ARGV, env = ENV )",""],["run","Launchy::Detect::Runner","Launchy/Detect/Runner.html#method-i-run","( cmd, *args )",""],["schemes","Launchy::Application::Browser","Launchy/Application/Browser.html#method-c-schemes","()",""],["shell_commands","Launchy::Detect::Runner","Launchy/Detect/Runner.html#method-i-shell_commands","( cmd, args )","<p>cut it down to just the shell commands that will be passed to exec or\nposix_spawn. The cmd argument is …\n"],["shell_commands","Launchy::Detect::Runner::Windows","Launchy/Detect/Runner/Windows.html#method-i-shell_commands","( cmd, *args )","<p>escape the reserved shell characters in windows command shell\ntechnet.microsoft.com/en-us/library/cc723564.aspx …\n"],["string_to_uri","Launchy","Launchy.html#method-c-string_to_uri","( s )",""],["to_a","Launchy::Version","Launchy/Version.html#method-c-to_a","()",""],["to_s","Launchy::Version","Launchy/Version.html#method-c-to_s","()",""],["visit","Launchy::Browser","Launchy/Browser.html#method-i-visit","( url )",""],["wet_run","Launchy::Detect::Runner::Forkable","Launchy/Detect/Runner/Forkable.html#method-i-wet_run","( cmd, *args )",""],["wet_run","Launchy::Detect::Runner::Jruby","Launchy/Detect/Runner/Jruby.html#method-i-wet_run","( cmd, *args )",""],["wet_run","Launchy::Detect::Runner::Windows","Launchy/Detect/Runner/Windows.html#method-i-wet_run","( cmd, *args )",""],["windows?","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-i-windows-3F","()",""],["windows?","Launchy::Detect::HostOsFamily","Launchy/Detect/HostOsFamily.html#method-c-windows-3F","()",""],["windows_app_list","Launchy::Application::Browser","Launchy/Application/Browser.html#method-i-windows_app_list","()",""],["HISTORY","","HISTORY_rdoc.html","","<p>Launchy Changlog\n<p>Version 2.2.0 - 2013-02-06\n<p>Change XFCE detection to not depend on grep (copiousfreetime/launchy …\n"],["Manifest","","Manifest_txt.html","","<p>CONTRIBUTING.md HISTORY.rdoc LICENSE Manifest.txt README.rdoc Rakefile\nbin/launchy lib/launchy.rb lib/launchy/application.rb …\n"],["README","","README_rdoc.html","","<p>launchy\n<p>Homepage\n<p>Github Project\n"]]}}