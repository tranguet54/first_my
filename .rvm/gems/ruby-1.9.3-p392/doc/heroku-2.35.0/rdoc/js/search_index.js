var search_data = {"index":{"searchIndex":["excon","heroku","auth","cli","client","appcrashed","consolesession","herokupostgresql","json","pgbackups","rendezvous","service","command","account","accounts","addons","apps","auth","base","basewithapp","certs","usageerror","commandfailed","config","db","domains","drains","git","help","keys","labs","logs","maintenance","pg","pgbackups","plugins","ps","regions","releases","run","sharing","ssl","stack","status","update","version","deprecated","help","classmethods","helpgroup","distribution","helpers","herokupostgresql","attachment","okjson","error","utf8error","plugin","errorupdatingsymlinkplugin","updater","herokupostgresql","client","pgbackups","client","abbrev()","action()","add()","add()","add()","add()","add()","add()","add()","add_collaborator()","add_config_vars()","add_domain()","add_drain()","add_headers()","add_key()","add_ssl()","addons()","alias_command()","alias_command()","api()","api()","api()","api_key()","app()","app()","app_attachments()","app_config_vars()","arrenc()","arrparse()","ask()","ask_for_and_save_credentials()","ask_for_credentials()","ask_for_password()","ask_for_password_on_windows()","associate_key()","associate_or_generate_ssh_key()","auth()","authenticated_resource()","autoupdate?()","background_update!()","backup_name()","base_host()","beta()","capture()","chain()","check()","check_disabled!()","check_for_associated_ssh_key()","check_for_deprecation()","checking_client_version()","clear()","clear()","clear()","clear_config_vars()","clear_ssl()","client()","client_version_from_path()","clone()","colorize()","command()","command_aliases()","commands()","compare_versions()","conf_to_uri_hash()","config_vars()","config_vars()","confirm()","confirm_billing()","confirm_billing()","confirm_billing()","confirm_command()","console()","console()","console_history_add()","console_history_dir()","console_history_file()","console_history_read()","console_session()","create()","create()","create_app()","create_complete?()","create_git_remote()","create_request()","create_transfer()","credentials()","current_args()","current_command()","current_command()","current_command()","current_command=()","current_options()","database_reset()","database_session()","decode()","default()","default_host()","default_params()","delete_backup()","delete_credentials()","deprecate()","deprecate()","deprecate()","destroy()","destroy()","destroy()","detached()","directory()","disable()","disable()","disable_feature()","display()","display_header()","display_heroku_warning()","display_name()","display_object()","display_row()","display_table()","display_warnings()","docs()","downgrade()","downgrade_addon()","drains()","dynos()","dynos()","each()","eat()","echo_off()","echo_on()","enable()","enable_feature()","encode()","end_of_stream?()","enforce_taps_version()","error()","error()","error_with_failure()","error_with_failure=()","escape()","escape()","extended()","extended_into()","extract_app()","extract_app()","extract_app_from_git_config()","extract_app_from_git_config()","extract_app_in_dir()","extract_app_in_dir()","extract_banner()","extract_banner()","extract_description()","extract_description()","extract_error()","extract_help()","extract_help()","extract_help_from_caller()","extract_help_from_caller()","extract_option()","extract_option()","extract_options()","extract_options()","extract_summary()","extract_summary()","extract_warning()","fail()","falsetok()","files()","files()","find_database_url_real_attachment()","forget_config!()","format_bytes()","format_date()","format_error()","format_key_for_display()","format_with_bang()","full_host()","gem_version_string()","generate_ssh_key()","get()","get_backup()","get_backups()","get_database()","get_feature()","get_latest_backup()","get_terminal_environment()","get_transfer()","get_transfers()","get_wait_status()","get_with_redirect()","git()","git_host()","git_remotes()","git_remotes()","global_option()","global_options()","group()","groups()","has_git?()","headers()","heroku()","heroku()","heroku_postgresql_host()","heroku_postgresql_resource()","hexdec4()","home_directory()","host()","hpg_addon_name()","hpg_databases()","hpg_resolve()","hpg_translate_fork_and_follow()","hprint()","hputs()","http_get()","http_post()","http_put()","httpcache_purge()","included()","included()","included_into()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","info()","info()","info()","info()","info()","info()","ingress()","inherited()","inherited()","inject_libpath()","install()","install()","install_addon()","installed_addons()","installed_client_path()","invalid_arguments()","invalid_arguments()","invalid_arguments()","json_decode()","json_encode()","key()","keyenc()","keys()","last_autoupdate_path()","latest_local_version()","launchy()","legacy_credentials_path()","lex()","line_formatter()","list()","list()","list()","list_collaborators()","list_domains()","list_drains()","list_features()","list_stacks()","load()","load!()","load_plugin()","load_taps()","login()","login()","logout()","logout()","logs()","longest()","maintenance()","match_attachments_by_name()","method_added()","method_added()","migrate()","migrate_to_stack()","namespace()","namespace()","namespaces()","netrc_path()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","nibble()","nulltok()","numenc()","numtok()","objenc()","objparse()","off()","on()","on_warning()","open()","open()","output_with_bang()","pairparse()","parse()","parse()","parse_database_yml()","parse_error_json()","parse_error_plain()","parse_error_xml()","parse_log()","parse_taps_opts()","path()","pgbackup_client()","poll_error()","poll_transfer!()","prepare_run()","primary_attachment!()","primary_attachment?()","process()","promote()","ps()","ps_restart()","ps_run()","ps_scale()","ps_stop()","psql()","pull()","push()","quantify()","rake()","rake()","read()","read_credentials()","read_logs()","reauthorize()","redisplay()","register_command()","register_namespace()","release()","releases()","remote()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove_all_keys()","remove_collaborator()","remove_config_var()","remove_domain()","remove_domains()","remove_drain()","remove_key()","remove_plugin()","remove_ssl()","rename()","rendezvous_session()","reset()","reset()","resource()","resource_name()","resource_url()","restart()","restart()","restore()","retry_login?()","retry_on_exception()","rollback()","rollback()","rollback()","rotate_credentials()","run()","run()","run_attached()","run_command()","run_console_command()","running_on_a_mac?()","running_on_windows?()","scale()","set()","set_buffer()","set_dynos()","set_workers()","shell()","shift_argument()","shift_argument()","shift_argument()","skip_plugins()","space()","spinner()","ssl_endpoint_add()","ssl_endpoint_info()","ssl_endpoint_list()","ssl_endpoint_remove()","ssl_endpoint_rollback()","ssl_endpoint_update()","start()","start()","start()","start()","starter_plan?()","status()","step_map()","stop()","strenc()","string_distance()","strtok()","styled_array()","styled_error()","styled_hash()","styled_header()","subst()","suggestion()","surrogate?()","sym_keys()","taps_client()","textparse()","time_ago()","to_s()","to_s()","tok()","token()","transfer()","transfer!()","transfer_status()","truetok()","truncate()","ucharcopy()","ucharenc()","unfollow()","unfollow()","uninstall()","uninstall()","uninstall_addon()","unquote()","unset()","update()","update()","update()","update()","update()","update_display()","updated_client_path()","updating_lock_path()","upgrade()","upgrade_addon()","uri_hash_to_url()","url()","user_agent()","user_agent=()","userinfo_from_uri()","valenc()","validate_arguments!()","validate_arguments!()","validate_arguments!()","valparse()","verified_hosts()","verify_host?()","version()","wait()","wait_for_lock()","warnings()","whoami()","with_tty()","workers()","workers()","write_credentials()"],"longSearchIndex":["excon","heroku","heroku::auth","heroku::cli","heroku::client","heroku::client::appcrashed","heroku::client::consolesession","heroku::client::herokupostgresql","heroku::client::json","heroku::client::pgbackups","heroku::client::rendezvous","heroku::client::service","heroku::command","heroku::command::account","heroku::command::accounts","heroku::command::addons","heroku::command::apps","heroku::command::auth","heroku::command::base","heroku::command::basewithapp","heroku::command::certs","heroku::command::certs::usageerror","heroku::command::commandfailed","heroku::command::config","heroku::command::db","heroku::command::domains","heroku::command::drains","heroku::command::git","heroku::command::help","heroku::command::keys","heroku::command::labs","heroku::command::logs","heroku::command::maintenance","heroku::command::pg","heroku::command::pgbackups","heroku::command::plugins","heroku::command::ps","heroku::command::regions","heroku::command::releases","heroku::command::run","heroku::command::sharing","heroku::command::ssl","heroku::command::stack","heroku::command::status","heroku::command::update","heroku::command::version","heroku::deprecated","heroku::deprecated::help","heroku::deprecated::help::classmethods","heroku::deprecated::help::helpgroup","heroku::distribution","heroku::helpers","heroku::helpers::herokupostgresql","heroku::helpers::herokupostgresql::attachment","heroku::okjson","heroku::okjson::error","heroku::okjson::utf8error","heroku::plugin","heroku::plugin::errorupdatingsymlinkplugin","heroku::updater","herokupostgresql","herokupostgresql::client","pgbackups","pgbackups::client","heroku::okjson#abbrev()","heroku::helpers#action()","heroku::command::addons#add()","heroku::command::certs#add()","heroku::command::domains#add()","heroku::command::drains#add()","heroku::command::keys#add()","heroku::command::sharing#add()","heroku::command::ssl#add()","heroku::client#add_collaborator()","heroku::client#add_config_vars()","heroku::client#add_domain()","heroku::client#add_drain()","heroku::client::herokupostgresql::add_headers()","heroku::client#add_key()","heroku::client#add_ssl()","heroku::client#addons()","heroku::command::base::alias_command()","heroku::command::base::alias_command()","heroku::auth::api()","heroku::command::base#api()","heroku::command::base#api()","heroku::auth::api_key()","heroku::command::base#app()","heroku::command::base#app()","heroku::helpers::herokupostgresql#app_attachments()","heroku::helpers::herokupostgresql#app_config_vars()","heroku::okjson#arrenc()","heroku::okjson#arrparse()","heroku::helpers#ask()","heroku::auth::ask_for_and_save_credentials()","heroku::auth::ask_for_credentials()","heroku::auth::ask_for_password()","heroku::auth::ask_for_password_on_windows()","heroku::auth::associate_key()","heroku::auth::associate_or_generate_ssh_key()","heroku::client::auth()","heroku::client::pgbackups#authenticated_resource()","heroku::updater::autoupdate?()","heroku::updater::background_update!()","heroku::command::pgbackups#backup_name()","heroku::auth::base_host()","heroku::command::update#beta()","heroku::command::pgbackups#capture()","heroku::command::certs#chain()","heroku::auth::check()","heroku::updater::check_disabled!()","heroku::auth::check_for_associated_ssh_key()","heroku::plugin::check_for_deprecation()","heroku::client::herokupostgresql#checking_client_version()","heroku::command::domains#clear()","heroku::command::keys#clear()","heroku::command::ssl#clear()","heroku::client#clear_config_vars()","heroku::client#clear_ssl()","heroku::auth::client()","heroku::updater::client_version_from_path()","heroku::command::git#clone()","heroku::command::logs#colorize()","heroku::deprecated::help::helpgroup#command()","heroku::command::command_aliases()","heroku::command::commands()","heroku::updater::compare_versions()","heroku::command::db#conf_to_uri_hash()","heroku::client#config_vars()","heroku::command::pgbackups#config_vars()","heroku::helpers#confirm()","heroku::client#confirm_billing()","heroku::command::account#confirm_billing()","heroku::helpers#confirm_billing()","heroku::helpers#confirm_command()","heroku::client#console()","heroku::command::run#console()","heroku::command::run#console_history_add()","heroku::command::run#console_history_dir()","heroku::command::run#console_history_file()","heroku::command::run#console_history_read()","heroku::command::run#console_session()","heroku::client#create()","heroku::command::apps#create()","heroku::client#create_app()","heroku::client#create_complete?()","heroku::helpers#create_git_remote()","heroku::client#create_request()","heroku::client::pgbackups#create_transfer()","heroku::command::pg#credentials()","heroku::command::current_args()","heroku::command::current_command()","heroku::command::base#current_command()","heroku::command::base#current_command()","heroku::command::current_command=()","heroku::command::current_options()","heroku::client#database_reset()","heroku::client#database_session()","heroku::okjson#decode()","heroku::command::accounts#default()","heroku::auth::default_host()","heroku::auth::default_params()","heroku::client::pgbackups#delete_backup()","heroku::auth::delete_credentials()","heroku::client#deprecate()","heroku::client::deprecate()","heroku::helpers#deprecate()","heroku::client#destroy()","heroku::command::apps#destroy()","heroku::command::pgbackups#destroy()","heroku::command::run#detached()","heroku::plugin::directory()","heroku::command::labs#disable()","heroku::updater::disable()","heroku::client#disable_feature()","heroku::helpers#display()","heroku::helpers#display_header()","heroku::client::herokupostgresql#display_heroku_warning()","heroku::helpers::herokupostgresql::attachment#display_name()","heroku::helpers#display_object()","heroku::helpers#display_row()","heroku::helpers#display_table()","heroku::command::display_warnings()","heroku::command::addons#docs()","heroku::command::addons#downgrade()","heroku::client#downgrade_addon()","heroku::command::logs#drains()","heroku::client#dynos()","heroku::command::ps#dynos()","heroku::client::service#each()","heroku::okjson#eat()","heroku::auth::echo_off()","heroku::auth::echo_on()","heroku::command::labs#enable()","heroku::client#enable_feature()","heroku::okjson#encode()","heroku::client::service#end_of_stream?()","heroku::command::db#enforce_taps_version()","heroku::helpers#error()","heroku::updater::error()","heroku::helpers::error_with_failure()","heroku::helpers::error_with_failure=()","heroku::command::base#escape()","heroku::command::base#escape()","heroku::helpers::extended()","heroku::helpers::extended_into()","heroku::command::base#extract_app()","heroku::command::base#extract_app()","heroku::command::base#extract_app_from_git_config()","heroku::command::base#extract_app_from_git_config()","heroku::command::base#extract_app_in_dir()","heroku::command::base#extract_app_in_dir()","heroku::command::base::extract_banner()","heroku::command::base::extract_banner()","heroku::command::base::extract_description()","heroku::command::base::extract_description()","heroku::command::extract_error()","heroku::command::base::extract_help()","heroku::command::base::extract_help()","heroku::command::base::extract_help_from_caller()","heroku::command::base::extract_help_from_caller()","heroku::command::base#extract_option()","heroku::command::base#extract_option()","heroku::command::base::extract_options()","heroku::command::base::extract_options()","heroku::command::base::extract_summary()","heroku::command::base::extract_summary()","heroku::client#extract_warning()","heroku::helpers#fail()","heroku::okjson#falsetok()","heroku::command::files()","heroku::distribution::files()","heroku::helpers::herokupostgresql#find_database_url_real_attachment()","heroku::helpers::herokupostgresql#forget_config!()","heroku::helpers#format_bytes()","heroku::helpers#format_date()","heroku::helpers#format_error()","heroku::command::keys#format_key_for_display()","heroku::helpers#format_with_bang()","heroku::auth::full_host()","heroku::client::gem_version_string()","heroku::auth::generate_ssh_key()","heroku::command::config#get()","heroku::client::pgbackups#get_backup()","heroku::client::pgbackups#get_backups()","heroku::client::herokupostgresql#get_database()","heroku::client#get_feature()","heroku::client::pgbackups#get_latest_backup()","heroku::helpers#get_terminal_environment()","heroku::client::pgbackups#get_transfer()","heroku::client::pgbackups#get_transfers()","heroku::client::herokupostgresql#get_wait_status()","excon::get_with_redirect()","heroku::helpers#git()","heroku::auth::git_host()","heroku::command::base#git_remotes()","heroku::command::base#git_remotes()","heroku::command::global_option()","heroku::command::global_options()","heroku::deprecated::help::classmethods#group()","heroku::deprecated::help::classmethods#groups()","heroku::helpers#has_git?()","heroku::client::herokupostgresql::headers()","heroku::command::base#heroku()","heroku::command::base#heroku()","heroku::client::herokupostgresql#heroku_postgresql_host()","heroku::client::herokupostgresql#heroku_postgresql_resource()","heroku::okjson#hexdec4()","heroku::helpers#home_directory()","heroku::auth::host()","heroku::helpers::herokupostgresql#hpg_addon_name()","heroku::helpers::herokupostgresql#hpg_databases()","heroku::helpers::herokupostgresql#hpg_resolve()","heroku::helpers::herokupostgresql#hpg_translate_fork_and_follow()","heroku::helpers#hprint()","heroku::helpers#hputs()","heroku::client::herokupostgresql#http_get()","heroku::client::herokupostgresql#http_post()","heroku::client::herokupostgresql#http_put()","heroku::client#httpcache_purge()","heroku::deprecated::help::included()","heroku::helpers::included()","heroku::helpers::included_into()","heroku::command::addons#index()","heroku::command::apps#index()","heroku::command::auth#index()","heroku::command::certs#index()","heroku::command::config#index()","heroku::command::domains#index()","heroku::command::drains#index()","heroku::command::help#index()","heroku::command::keys#index()","heroku::command::labs#index()","heroku::command::logs#index()","heroku::command::maintenance#index()","heroku::command::pg#index()","heroku::command::pgbackups#index()","heroku::command::plugins#index()","heroku::command::ps#index()","heroku::command::regions#index()","heroku::command::releases#index()","heroku::command::run#index()","heroku::command::sharing#index()","heroku::command::ssl#index()","heroku::command::stack#index()","heroku::command::status#index()","heroku::command::update#index()","heroku::command::version#index()","heroku::client#info()","heroku::command::apps#info()","heroku::command::certs#info()","heroku::command::labs#info()","heroku::command::pg#info()","heroku::command::releases#info()","heroku::client::herokupostgresql#ingress()","heroku::command::base::inherited()","heroku::command::base::inherited()","heroku::updater::inject_libpath()","heroku::command::plugins#install()","heroku::plugin#install()","heroku::client#install_addon()","heroku::client#installed_addons()","heroku::updater::installed_client_path()","heroku::command::invalid_arguments()","heroku::command::base#invalid_arguments()","heroku::command::base#invalid_arguments()","heroku::helpers#json_decode()","heroku::helpers#json_encode()","heroku::command::certs#key()","heroku::okjson#keyenc()","heroku::client#keys()","heroku::updater::last_autoupdate_path()","heroku::updater::latest_local_version()","heroku::helpers#launchy()","heroku::auth::legacy_credentials_path()","heroku::okjson#lex()","heroku::helpers#line_formatter()","heroku::client#list()","heroku::command::addons#list()","heroku::plugin::list()","heroku::client#list_collaborators()","heroku::client#list_domains()","heroku::client#list_drains()","heroku::client#list_features()","heroku::client#list_stacks()","heroku::command::load()","heroku::plugin::load!()","heroku::plugin::load_plugin()","heroku::command::db#load_taps()","heroku::auth::login()","heroku::command::auth#login()","heroku::auth::logout()","heroku::command::auth#logout()","heroku::client#logs()","heroku::helpers#longest()","heroku::client#maintenance()","heroku::helpers::herokupostgresql#match_attachments_by_name()","heroku::command::base::method_added()","heroku::command::base::method_added()","heroku::command::stack#migrate()","heroku::client#migrate_to_stack()","heroku::command::base::namespace()","heroku::command::base::namespace()","heroku::command::namespaces()","heroku::auth::netrc_path()","heroku::client::new()","heroku::client::consolesession::new()","heroku::client::herokupostgresql::new()","heroku::client::pgbackups::new()","heroku::client::rendezvous::new()","heroku::client::service::new()","heroku::command::base::new()","heroku::command::base::new()","heroku::deprecated::help::helpgroup::new()","heroku::helpers::herokupostgresql::attachment::new()","heroku::plugin::new()","herokupostgresql::client::new()","pgbackups::client::new()","heroku::okjson#nibble()","heroku::okjson#nulltok()","heroku::okjson#numenc()","heroku::okjson#numtok()","heroku::okjson#objenc()","heroku::okjson#objparse()","heroku::command::maintenance#off()","heroku::command::maintenance#on()","heroku::client#on_warning()","heroku::command::addons#open()","heroku::command::apps#open()","heroku::helpers#output_with_bang()","heroku::okjson#pairparse()","heroku::client::json::parse()","heroku::command::parse()","heroku::command::db#parse_database_yml()","heroku::command::parse_error_json()","heroku::command::parse_error_plain()","heroku::command::parse_error_xml()","heroku::command::logs#parse_log()","heroku::command::db#parse_taps_opts()","heroku::plugin#path()","heroku::command::pgbackups#pgbackup_client()","heroku::command::pgbackups#poll_error()","heroku::command::pgbackups#poll_transfer!()","heroku::command::prepare_run()","heroku::helpers::herokupostgresql::attachment#primary_attachment!()","heroku::helpers::herokupostgresql::attachment#primary_attachment?()","heroku::client#process()","heroku::command::pg#promote()","heroku::client#ps()","heroku::client#ps_restart()","heroku::client#ps_run()","heroku::client#ps_scale()","heroku::client#ps_stop()","heroku::command::pg#psql()","heroku::command::db#pull()","heroku::command::db#push()","heroku::helpers#quantify()","heroku::client#rake()","heroku::command::run#rake()","heroku::client::service#read()","heroku::auth::read_credentials()","heroku::client#read_logs()","heroku::auth::reauthorize()","heroku::helpers#redisplay()","heroku::command::register_command()","heroku::command::register_namespace()","heroku::client#release()","heroku::client#releases()","heroku::command::git#remote()","heroku::command::addons#remove()","heroku::command::certs#remove()","heroku::command::domains#remove()","heroku::command::drains#remove()","heroku::command::keys#remove()","heroku::command::sharing#remove()","heroku::command::ssl#remove()","heroku::client#remove_all_keys()","heroku::client#remove_collaborator()","heroku::client#remove_config_var()","heroku::client#remove_domain()","heroku::client#remove_domains()","heroku::client#remove_drain()","heroku::client#remove_key()","heroku::plugin::remove_plugin()","heroku::client#remove_ssl()","heroku::command::apps#rename()","heroku::command::run#rendezvous_session()","heroku::client::herokupostgresql#reset()","heroku::command::pg#reset()","heroku::client#resource()","heroku::client::herokupostgresql#resource_name()","heroku::helpers::herokupostgresql#resource_url()","heroku::client#restart()","heroku::command::ps#restart()","heroku::command::pgbackups#restore()","heroku::auth::retry_login?()","heroku::helpers#retry_on_exception()","heroku::client#rollback()","heroku::command::certs#rollback()","heroku::command::releases#rollback()","heroku::client::herokupostgresql#rotate_credentials()","heroku::client::consolesession#run()","heroku::command::run()","heroku::command::run#run_attached()","heroku::helpers#run_command()","heroku::client#run_console_command()","heroku::helpers#running_on_a_mac?()","heroku::helpers#running_on_windows?()","heroku::command::ps#scale()","heroku::command::config#set()","heroku::helpers#set_buffer()","heroku::client#set_dynos()","heroku::client#set_workers()","heroku::helpers#shell()","heroku::command::shift_argument()","heroku::command::base#shift_argument()","heroku::command::base#shift_argument()","heroku::plugin::skip_plugins()","heroku::deprecated::help::helpgroup#space()","heroku::helpers#spinner()","heroku::client#ssl_endpoint_add()","heroku::client#ssl_endpoint_info()","heroku::client#ssl_endpoint_list()","heroku::client#ssl_endpoint_remove()","heroku::client#ssl_endpoint_rollback()","heroku::client#ssl_endpoint_update()","heroku::cli::start()","heroku::client#start()","heroku::client::rendezvous#start()","heroku::client::service#start()","heroku::helpers::herokupostgresql::attachment#starter_plan?()","heroku::helpers#status()","heroku::command::pgbackups#step_map()","heroku::command::ps#stop()","heroku::okjson#strenc()","heroku::helpers#string_distance()","heroku::okjson#strtok()","heroku::helpers#styled_array()","heroku::helpers#styled_error()","heroku::helpers#styled_hash()","heroku::helpers#styled_header()","heroku::okjson#subst()","heroku::helpers#suggestion()","heroku::okjson#surrogate?()","heroku::client::herokupostgresql#sym_keys()","heroku::command::db#taps_client()","heroku::okjson#textparse()","heroku::helpers#time_ago()","heroku::client::service#to_s()","heroku::plugin#to_s()","heroku::okjson#tok()","heroku::command::auth#token()","heroku::command::sharing#transfer()","heroku::command::pgbackups#transfer!()","heroku::command::pgbackups#transfer_status()","heroku::okjson#truetok()","heroku::helpers#truncate()","heroku::okjson#ucharcopy()","heroku::okjson#ucharenc()","heroku::client::herokupostgresql#unfollow()","heroku::command::pg#unfollow()","heroku::command::plugins#uninstall()","heroku::plugin#uninstall()","heroku::client#uninstall_addon()","heroku::okjson#unquote()","heroku::command::config#unset()","heroku::client#update()","heroku::command::certs#update()","heroku::command::plugins#update()","heroku::plugin#update()","heroku::updater::update()","heroku::command::pgbackups#update_display()","heroku::updater::updated_client_path()","heroku::updater::updating_lock_path()","heroku::command::addons#upgrade()","heroku::client#upgrade_addon()","heroku::command::db#uri_hash_to_url()","heroku::command::pgbackups#url()","heroku::user_agent()","heroku::user_agent=()","heroku::command::db#userinfo_from_uri()","heroku::okjson#valenc()","heroku::command::validate_arguments!()","heroku::command::base#validate_arguments!()","heroku::command::base#validate_arguments!()","heroku::okjson#valparse()","heroku::auth::verified_hosts()","heroku::auth::verify_host?()","heroku::client::version()","heroku::command::pg#wait()","heroku::updater::wait_for_lock()","heroku::command::warnings()","heroku::command::auth#whoami()","heroku::helpers#with_tty()","heroku::client#workers()","heroku::command::ps#workers()","heroku::auth::write_credentials()"],"info":[["Excon","","Excon.html","",""],["Heroku","","Heroku.html","","<p>based on the Rails Plugin\n<p>Some parts adapted from golang.org/src/pkg/json/decode.go and\ngolang.org/src/pkg/utf8/utf8.go …\n"],["Heroku::Auth","","Heroku/Auth.html","",""],["Heroku::CLI","","Heroku/CLI.html","",""],["Heroku::Client","","Heroku/Client.html","","<p>A Ruby class to call the Heroku REST API.  You might use this if you want\nto manage your Heroku apps …\n"],["Heroku::Client::AppCrashed","","Heroku/Client/AppCrashed.html","",""],["Heroku::Client::ConsoleSession","","Heroku/Client/ConsoleSession.html","","<p>support for console sessions\n"],["Heroku::Client::HerokuPostgresql","","Heroku/Client/HerokuPostgresql.html","",""],["Heroku::Client::JSON","","Heroku/Client/JSON.html","",""],["Heroku::Client::Pgbackups","","Heroku/Client/Pgbackups.html","",""],["Heroku::Client::Rendezvous","","Heroku/Client/Rendezvous.html","",""],["Heroku::Client::Service","","Heroku/Client/Service.html","",""],["Heroku::Command","","Heroku/Command.html","",""],["Heroku::Command::Account","","Heroku/Command/Account.html","","<p>manage heroku account options\n"],["Heroku::Command::Accounts","","Heroku/Command/Accounts.html","","<p>manage multiple heroku accounts\n"],["Heroku::Command::Addons","","Heroku/Command/Addons.html","","<p>manage addon resources\n"],["Heroku::Command::Apps","","Heroku/Command/Apps.html","","<p>manage apps (create, destroy)\n"],["Heroku::Command::Auth","","Heroku/Command/Auth.html","","<p>authentication (login, logout)\n"],["Heroku::Command::Base","","Heroku/Command/Base.html","",""],["Heroku::Command::BaseWithApp","","Heroku/Command/Base.html","",""],["Heroku::Command::Certs","","Heroku/Command/Certs.html","","<p>manage ssl endpoints for an app\n"],["Heroku::Command::Certs::UsageError","","Heroku/Command/Certs/UsageError.html","",""],["Heroku::Command::CommandFailed","","Heroku/Command/CommandFailed.html","",""],["Heroku::Command::Config","","Heroku/Command/Config.html","","<p>manage app config vars\n"],["Heroku::Command::Db","","Heroku/Command/Db.html","","<p>manage the database for an app\n"],["Heroku::Command::Domains","","Heroku/Command/Domains.html","","<p>manage custom domains\n"],["Heroku::Command::Drains","","Heroku/Command/Drains.html","","<p>display syslog drains for an app\n"],["Heroku::Command::Git","","Heroku/Command/Git.html","","<p>manage git for apps\n"],["Heroku::Command::Help","","Heroku/Command/Help.html","","<p>list commands and display help\n"],["Heroku::Command::Keys","","Heroku/Command/Keys.html","","<p>manage authentication keys\n"],["Heroku::Command::Labs","","Heroku/Command/Labs.html","","<p>manage optional features\n"],["Heroku::Command::Logs","","Heroku/Command/Logs.html","","<p>display logs for an app\n"],["Heroku::Command::Maintenance","","Heroku/Command/Maintenance.html","","<p>manage maintenance mode for an app\n"],["Heroku::Command::Pg","","Heroku/Command/Pg.html","","<p>manage heroku-postgresql databases\n"],["Heroku::Command::Pgbackups","","Heroku/Command/Pgbackups.html","","<p>manage backups of heroku postgresql databases\n"],["Heroku::Command::Plugins","","Heroku/Command/Plugins.html","","<p>manage plugins to the heroku gem\n"],["Heroku::Command::Ps","","Heroku/Command/Ps.html","","<p>manage processes (dynos, workers)\n"],["Heroku::Command::Regions","","Heroku/Command/Regions.html","","<p>HIDDEN: get info on available regions\n"],["Heroku::Command::Releases","","Heroku/Command/Releases.html","","<p>manage app releases\n"],["Heroku::Command::Run","","Heroku/Command/Run.html","","<p>run one-off commands (console, rake)\n"],["Heroku::Command::Sharing","","Heroku/Command/Sharing.html","","<p>manage collaborators on an app\n"],["Heroku::Command::Ssl","","Heroku/Command/Ssl.html","","<p>manage ssl certificates for an app\n"],["Heroku::Command::Stack","","Heroku/Command/Stack.html","","<p>manage the stack for an app\n"],["Heroku::Command::Status","","Heroku/Command/Status.html","","<p>check status of heroku platform\n"],["Heroku::Command::Update","","Heroku/Command/Update.html","","<p>update the heroku client\n"],["Heroku::Command::Version","","Heroku/Command/Version.html","","<p>display version\n"],["Heroku::Deprecated","","Heroku/Deprecated.html","",""],["Heroku::Deprecated::Help","","Heroku/Deprecated/Help.html","",""],["Heroku::Deprecated::Help::ClassMethods","","Heroku/Deprecated/Help/ClassMethods.html","",""],["Heroku::Deprecated::Help::HelpGroup","","Heroku/Deprecated/Help/HelpGroup.html","",""],["Heroku::Distribution","","Heroku/Distribution.html","",""],["Heroku::Helpers","","Heroku/Helpers.html","",""],["Heroku::Helpers::HerokuPostgresql","","Heroku/Helpers/HerokuPostgresql.html","",""],["Heroku::Helpers::HerokuPostgresql::Attachment","","Heroku/Helpers/HerokuPostgresql/Attachment.html","",""],["Heroku::OkJson","","Heroku/OkJson.html","",""],["Heroku::OkJson::Error","","Heroku/OkJson/Error.html","",""],["Heroku::OkJson::Utf8Error","","Heroku/OkJson/Utf8Error.html","",""],["Heroku::Plugin","","Heroku/Plugin.html","",""],["Heroku::Plugin::ErrorUpdatingSymlinkPlugin","","Heroku/Plugin/ErrorUpdatingSymlinkPlugin.html","",""],["Heroku::Updater","","Heroku/Updater.html","",""],["HerokuPostgresql","","HerokuPostgresql.html","",""],["HerokuPostgresql::Client","","HerokuPostgresql/Client.html","",""],["Pgbackups","","Pgbackups.html","",""],["Pgbackups::Client","","Pgbackups/Client.html","",""],["abbrev","Heroku::OkJson","Heroku/OkJson.html#method-i-abbrev","(s)",""],["action","Heroku::Helpers","Heroku/Helpers.html#method-i-action","(message, options={})","<p>DISPLAY HELPERS\n"],["add","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-add","()","<p>addons:add ADDON\n<p>install an addon\n"],["add","Heroku::Command::Certs","Heroku/Command/Certs.html#method-i-add","()","<p>certs:add PEM KEY\n<p>Add an ssl endpoint to an app.\n\n<pre>--bypass  # bypass the trust chain completion step</pre>\n"],["add","Heroku::Command::Domains","Heroku/Command/Domains.html#method-i-add","()","\n<pre>domains:add DOMAIN\n\nadd a custom domain to an app</pre>\n<p>Examples:\n\n<pre>$ heroku domains:add example.com\nAdding example.com ...</pre>\n"],["add","Heroku::Command::Drains","Heroku/Command/Drains.html#method-i-add","()","<p>drains:add URL\n<p>add a syslog drain\n"],["add","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-add","()","\n<pre>keys:add [KEY]\n\nadd a key for the current user\n\nif no KEY is specified, will try to find ~/.ssh/id_[rd]sa.pub</pre>\n"],["add","Heroku::Command::Sharing","Heroku/Command/Sharing.html#method-i-add","()","\n<pre>sharing:add EMAIL\n\nadd a collaborator to an app</pre>\n<p>Example:\n\n<pre>$ heroku sharing:add collaborator@example.com ...</pre>\n"],["add","Heroku::Command::Ssl","Heroku/Command/Ssl.html#method-i-add","()","<p>ssl:add PEM KEY\n<p>add an ssl certificate to an app\n"],["add_collaborator","Heroku::Client","Heroku/Client.html#method-i-add_collaborator","(app_name, email)","<p>Invite a person by email address to collaborate on the app.\n"],["add_config_vars","Heroku::Client","Heroku/Client.html#method-i-add_config_vars","(app_name, new_vars)",""],["add_domain","Heroku::Client","Heroku/Client.html#method-i-add_domain","(app_name, domain)",""],["add_drain","Heroku::Client","Heroku/Client.html#method-i-add_drain","(app_name, url)",""],["add_headers","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-c-add_headers","(headers)",""],["add_key","Heroku::Client","Heroku/Client.html#method-i-add_key","(key)","<p>Add an ssh public key to the current user.\n"],["add_ssl","Heroku::Client","Heroku/Client.html#method-i-add_ssl","(app_name, pem, key)",""],["addons","Heroku::Client","Heroku/Client.html#method-i-addons","()",""],["alias_command","Heroku::Command::Base","Heroku/Command/Base.html#method-c-alias_command","(new, old)",""],["alias_command","Heroku::Command::Base","Heroku/Command/Base.html#method-c-alias_command","(new, old)",""],["api","Heroku::Auth","Heroku/Auth.html#method-c-api","()",""],["api","Heroku::Command::Base","Heroku/Command/Base.html#method-i-api","()",""],["api","Heroku::Command::Base","Heroku/Command/Base.html#method-i-api","()",""],["api_key","Heroku::Auth","Heroku/Auth.html#method-c-api_key","(user = get_credentials[0], password = get_credentials[1])",""],["app","Heroku::Command::Base","Heroku/Command/Base.html#method-i-app","()",""],["app","Heroku::Command::Base","Heroku/Command/Base.html#method-i-app","()",""],["app_attachments","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-app_attachments","()",""],["app_config_vars","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-app_config_vars","()",""],["arrenc","Heroku::OkJson","Heroku/OkJson.html#method-i-arrenc","(a)",""],["arrparse","Heroku::OkJson","Heroku/OkJson.html#method-i-arrparse","(ts)","<p>Parses an “array” in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. …\n"],["ask","Heroku::Helpers","Heroku/Helpers.html#method-i-ask","()",""],["ask_for_and_save_credentials","Heroku::Auth","Heroku/Auth.html#method-c-ask_for_and_save_credentials","()",""],["ask_for_credentials","Heroku::Auth","Heroku/Auth.html#method-c-ask_for_credentials","()",""],["ask_for_password","Heroku::Auth","Heroku/Auth.html#method-c-ask_for_password","()",""],["ask_for_password_on_windows","Heroku::Auth","Heroku/Auth.html#method-c-ask_for_password_on_windows","()",""],["associate_key","Heroku::Auth","Heroku/Auth.html#method-c-associate_key","(key)",""],["associate_or_generate_ssh_key","Heroku::Auth","Heroku/Auth.html#method-c-associate_or_generate_ssh_key","()",""],["auth","Heroku::Client","Heroku/Client.html#method-c-auth","(user, password, host=Heroku::Auth.host)",""],["authenticated_resource","Heroku::Client::Pgbackups","Heroku/Client/Pgbackups.html#method-i-authenticated_resource","(path)",""],["autoupdate?","Heroku::Updater","Heroku/Updater.html#method-c-autoupdate-3F","()",""],["background_update!","Heroku::Updater","Heroku/Updater.html#method-c-background_update-21","()",""],["backup_name","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-backup_name","(to_url)",""],["base_host","Heroku::Auth","Heroku/Auth.html#method-c-base_host","(host)",""],["beta","Heroku::Command::Update","Heroku/Command/Update.html#method-i-beta","()","<p>update:beta\n<p>update to the latest beta client\n<p>$ heroku update Updating from v1.2.3… done, updated to  …\n"],["capture","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-capture","()","<p>pgbackups:capture [DATABASE]\n<p>capture a backup from a database id\n<p>if no DATABASE is specified, defaults …\n"],["chain","Heroku::Command::Certs","Heroku/Command/Certs.html#method-i-chain","()","<p>certs:chain PEM [PEM …]\n<p>Print the ordered and complete chain for the given certificate.\n<p>Optional intermediate …\n"],["check","Heroku::Auth","Heroku/Auth.html#method-c-check","()","<p>just a stub; will raise if not authenticated\n"],["check_disabled!","Heroku::Updater","Heroku/Updater.html#method-c-check_disabled-21","()",""],["check_for_associated_ssh_key","Heroku::Auth","Heroku/Auth.html#method-c-check_for_associated_ssh_key","()",""],["check_for_deprecation","Heroku::Plugin","Heroku/Plugin.html#method-c-check_for_deprecation","(plugin)",""],["checking_client_version","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-checking_client_version","()",""],["clear","Heroku::Command::Domains","Heroku/Command/Domains.html#method-i-clear","()","\n<pre>domains:clear\n\nremove all custom domains from an app</pre>\n<p>Examples:\n\n<pre>$ heroku domains:clear\nRemoving all domain ...</pre>\n"],["clear","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-clear","()","\n<pre>keys:clear\n\nremove all authentication keys from the current user</pre>\n<p>Examples:\n\n<pre>$ heroku keys:clear\nRemoving ...</pre>\n"],["clear","Heroku::Command::Ssl","Heroku/Command/Ssl.html#method-i-clear","()","<p>ssl:clear\n<p>remove all ssl certificates from an app\n"],["clear_config_vars","Heroku::Client","Heroku/Client.html#method-i-clear_config_vars","(app_name)",""],["clear_ssl","Heroku::Client","Heroku/Client.html#method-i-clear_ssl","(app_name)",""],["client","Heroku::Auth","Heroku/Auth.html#method-c-client","()",""],["client_version_from_path","Heroku::Updater","Heroku/Updater.html#method-c-client_version_from_path","(path)",""],["clone","Heroku::Command::Git","Heroku/Command/Git.html#method-i-clone","()","\n<pre>git:clone APP [DIRECTORY]\n\nclones a heroku app to your local machine at DIRECTORY (defaults to app name) ...</pre>\n"],["colorize","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-colorize","(chunk)",""],["command","Heroku::Deprecated::Help::HelpGroup","Heroku/Deprecated/Help/HelpGroup.html#method-i-command","(name, description)",""],["command_aliases","Heroku::Command","Heroku/Command.html#method-c-command_aliases","()",""],["commands","Heroku::Command","Heroku/Command.html#method-c-commands","()",""],["compare_versions","Heroku::Updater","Heroku/Updater.html#method-c-compare_versions","(first_version, second_version)",""],["conf_to_uri_hash","Heroku::Command::Db","Heroku/Command/Db.html#method-i-conf_to_uri_hash","(conf)",""],["config_vars","Heroku::Client","Heroku/Client.html#method-i-config_vars","(app_name)",""],["config_vars","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-config_vars","()",""],["confirm","Heroku::Helpers","Heroku/Helpers.html#method-i-confirm","(message=\"Are you sure you wish to continue? (y/n)\")",""],["confirm_billing","Heroku::Client","Heroku/Client.html#method-i-confirm_billing","()",""],["confirm_billing","Heroku::Command::Account","Heroku/Command/Account.html#method-i-confirm_billing","()","\n<pre>account:confirm_billing\n\nConfirm that your account can be billed at the end of the month</pre>\n<p>Example:\n\n<pre>$ heroku ...</pre>\n"],["confirm_billing","Heroku::Helpers","Heroku/Helpers.html#method-i-confirm_billing","()",""],["confirm_command","Heroku::Helpers","Heroku/Helpers.html#method-i-confirm_command","(app_to_confirm = app, message=nil)",""],["console","Heroku::Client","Heroku/Client.html#method-i-console","(app_name, cmd=nil)","<p>Execute a one-off console command, or start a new console tty session if\ncmd is nil.\n"],["console","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console","()","\n<pre>run:console [COMMAND]\n\nopen a remote console session\n\nif COMMAND is specified, run the command and exit ...</pre>\n"],["console_history_add","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_history_add","(app, cmd)",""],["console_history_dir","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_history_dir","()",""],["console_history_file","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_history_file","(app)",""],["console_history_read","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_history_read","(app)",""],["console_session","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_session","(app)",""],["create","Heroku::Client","Heroku/Client.html#method-i-create","(name=nil, options={})","<p>Create a new app, with an optional name.\n"],["create","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-create","()","\n<pre>apps:create [NAME]\n\ncreate a new app\n\n    --addons ADDONS        # a comma-delimited list of addons to ...</pre>\n"],["create_app","Heroku::Client","Heroku/Client.html#method-i-create_app","(name=nil, options={})",""],["create_complete?","Heroku::Client","Heroku/Client.html#method-i-create_complete-3F","(name)",""],["create_git_remote","Heroku::Helpers","Heroku/Helpers.html#method-i-create_git_remote","(remote, url)",""],["create_request","Heroku::Client","Heroku/Client.html#method-i-create_request","(name=nil, options={})",""],["create_transfer","Heroku::Client::Pgbackups","Heroku/Client/Pgbackups.html#method-i-create_transfer","(from_url, from_name, to_url, to_name, opts={})",""],["credentials","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-credentials","()","<p>pg:credentials DATABASE\n<p>Display the DATABASE credentials.\n\n<pre>--reset  # Reset credentials on the specified ...</pre>\n"],["current_args","Heroku::Command","Heroku/Command.html#method-c-current_args","()",""],["current_command","Heroku::Command","Heroku/Command.html#method-c-current_command","()",""],["current_command","Heroku::Command::Base","Heroku/Command/Base.html#method-i-current_command","()",""],["current_command","Heroku::Command::Base","Heroku/Command/Base.html#method-i-current_command","()",""],["current_command=","Heroku::Command","Heroku/Command.html#method-c-current_command-3D","(new_current_command)",""],["current_options","Heroku::Command","Heroku/Command.html#method-c-current_options","()",""],["database_reset","Heroku::Client","Heroku/Client.html#method-i-database_reset","(app_name)",""],["database_session","Heroku::Client","Heroku/Client.html#method-i-database_session","(app_name)",""],["decode","Heroku::OkJson","Heroku/OkJson.html#method-i-decode","(s)","<p>Decodes a json document in string s and returns the corresponding ruby\nvalue. String s must be valid …\n"],["default","Heroku::Command::Accounts","Heroku/Command/Accounts.html#method-i-default","()","<p>accounts:default set a system-wide default account\n"],["default_host","Heroku::Auth","Heroku/Auth.html#method-c-default_host","()",""],["default_params","Heroku::Auth","Heroku/Auth.html#method-c-default_params","()",""],["delete_backup","Heroku::Client::Pgbackups","Heroku/Client/Pgbackups.html#method-i-delete_backup","(name)",""],["delete_credentials","Heroku::Auth","Heroku/Auth.html#method-c-delete_credentials","()",""],["deprecate","Heroku::Client","Heroku/Client.html#method-i-deprecate","()",""],["deprecate","Heroku::Client","Heroku/Client.html#method-c-deprecate","()",""],["deprecate","Heroku::Helpers","Heroku/Helpers.html#method-i-deprecate","(message)",""],["destroy","Heroku::Client","Heroku/Client.html#method-i-destroy","(name)","<p>Destroy the app permanently.\n"],["destroy","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-destroy","()","\n<pre>apps:destroy\n\npermanently destroy an app</pre>\n<p>Example:\n\n<pre>$ heroku apps:destroy -a example --confirm example\nDestroying ...</pre>\n"],["destroy","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-destroy","()","<p>pgbackups:destroy BACKUP_ID\n<p>destroys a backup\n"],["detached","Heroku::Command::Run","Heroku/Command/Run.html#method-i-detached","()","\n<pre>run:detached COMMAND\n\nrun a detached process, where output is sent to your logs</pre>\n<p>Example:\n\n<pre>$ heroku run:detached ...</pre>\n"],["directory","Heroku::Plugin","Heroku/Plugin.html#method-c-directory","()",""],["disable","Heroku::Command::Labs","Heroku/Command/Labs.html#method-i-disable","()","\n<pre>labs:disable FEATURE\n\ndisables an experimental feature</pre>\n<p>Example:\n\n<pre>$ heroku labs:disable ninja-power\nDisabling ...</pre>\n"],["disable","Heroku::Updater","Heroku/Updater.html#method-c-disable","(message=nil)",""],["disable_feature","Heroku::Client","Heroku/Client.html#method-i-disable_feature","(app, name)",""],["display","Heroku::Helpers","Heroku/Helpers.html#method-i-display","(msg=\"\", new_line=true)",""],["display_header","Heroku::Helpers","Heroku/Helpers.html#method-i-display_header","(message=\"\", new_line=true)",""],["display_heroku_warning","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-display_heroku_warning","(response)",""],["display_name","Heroku::Helpers::HerokuPostgresql::Attachment","Heroku/Helpers/HerokuPostgresql/Attachment.html#method-i-display_name","()",""],["display_object","Heroku::Helpers","Heroku/Helpers.html#method-i-display_object","(object)",""],["display_row","Heroku::Helpers","Heroku/Helpers.html#method-i-display_row","(row, lengths)",""],["display_table","Heroku::Helpers","Heroku/Helpers.html#method-i-display_table","(objects, columns, headers)",""],["display_warnings","Heroku::Command","Heroku/Command.html#method-c-display_warnings","()",""],["docs","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-docs","()","<p>addons:docs ADDON\n<p>open an addon’s documentation in your browser\n"],["downgrade","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-downgrade","()","<p>addons:downgrade ADDON\n<p>downgrade an existing addon\n"],["downgrade_addon","Heroku::Client","Heroku/Client.html#method-i-downgrade_addon","(app_name, addon, config={})",""],["drains","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-drains","()","<p>logs:drains\n<p>DEPRECATED: use `heroku drains`\n"],["dynos","Heroku::Client","Heroku/Client.html#method-i-dynos","(app_name)",""],["dynos","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-dynos","()","\n<pre>ps:dynos [QTY]\n\nDEPRECATED: use `heroku ps:scale dynos=N`\n\nscale to QTY web processes\n\nif QTY is not ...</pre>\n"],["each","Heroku::Client::Service","Heroku/Client/Service.html#method-i-each","()","<p>Iterate over all output chunks until EOF is reached.\n"],["eat","Heroku::OkJson","Heroku/OkJson.html#method-i-eat","(typ, ts)",""],["echo_off","Heroku::Auth","Heroku/Auth.html#method-c-echo_off","()",""],["echo_on","Heroku::Auth","Heroku/Auth.html#method-c-echo_on","()",""],["enable","Heroku::Command::Labs","Heroku/Command/Labs.html#method-i-enable","()","\n<pre>labs:enable FEATURE\n\nenables an experimental feature</pre>\n<p>Example:\n\n<pre>$ heroku labs:enable ninja-power\nEnabling ...</pre>\n"],["enable_feature","Heroku::Client","Heroku/Client.html#method-i-enable_feature","(app, name)",""],["encode","Heroku::OkJson","Heroku/OkJson.html#method-i-encode","(x)","<p>Encodes x into a json text. It may contain only Array, Hash, String,\nNumeric, true, false, nil. (Note …\n"],["end_of_stream?","Heroku::Client::Service","Heroku/Client/Service.html#method-i-end_of_stream-3F","()","<p>Does the service have any remaining output?\n"],["enforce_taps_version","Heroku::Command::Db","Heroku/Command/Db.html#method-i-enforce_taps_version","(version)",""],["error","Heroku::Helpers","Heroku/Helpers.html#method-i-error","(message)",""],["error","Heroku::Updater","Heroku/Updater.html#method-c-error","(message)",""],["error_with_failure","Heroku::Helpers","Heroku/Helpers.html#method-c-error_with_failure","()",""],["error_with_failure=","Heroku::Helpers","Heroku/Helpers.html#method-c-error_with_failure-3D","(new_error_with_failure)",""],["escape","Heroku::Command::Base","Heroku/Command/Base.html#method-i-escape","(value)",""],["escape","Heroku::Command::Base","Heroku/Command/Base.html#method-i-escape","(value)",""],["extended","Heroku::Helpers","Heroku/Helpers.html#method-c-extended","(base)",""],["extended_into","Heroku::Helpers","Heroku/Helpers.html#method-c-extended_into","()",""],["extract_app","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app","()",""],["extract_app","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app","()",""],["extract_app_from_git_config","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app_from_git_config","()",""],["extract_app_from_git_config","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app_from_git_config","()",""],["extract_app_in_dir","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app_in_dir","(dir)",""],["extract_app_in_dir","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app_in_dir","(dir)",""],["extract_banner","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_banner","(help)",""],["extract_banner","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_banner","(help)",""],["extract_description","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_description","(help)",""],["extract_description","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_description","(help)",""],["extract_error","Heroku::Command","Heroku/Command.html#method-c-extract_error","(body, options={})",""],["extract_help","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_help","(file, line_number)",""],["extract_help","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_help","(file, line_number)",""],["extract_help_from_caller","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_help_from_caller","(line)","<p>Parse the caller format and identify the file and line number as identified\nin : www.ruby-doc.org/core/classes/Kernel.html#M001397 …\n"],["extract_help_from_caller","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_help_from_caller","(line)","<p>Parse the caller format and identify the file and line number as identified\nin : www.ruby-doc.org/core/classes/Kernel.html#M001397 …\n"],["extract_option","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_option","(key)",""],["extract_option","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_option","(key)",""],["extract_options","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_options","(help)",""],["extract_options","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_options","(help)",""],["extract_summary","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_summary","(help)",""],["extract_summary","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_summary","(help)",""],["extract_warning","Heroku::Client","Heroku/Client.html#method-i-extract_warning","(response)",""],["fail","Heroku::Helpers","Heroku/Helpers.html#method-i-fail","(message)",""],["falsetok","Heroku::OkJson","Heroku/OkJson.html#method-i-falsetok","(s)",""],["files","Heroku::Command","Heroku/Command.html#method-c-files","()",""],["files","Heroku::Distribution","Heroku/Distribution.html#method-c-files","()",""],["find_database_url_real_attachment","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-find_database_url_real_attachment","()",""],["forget_config!","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-forget_config-21","()",""],["format_bytes","Heroku::Helpers","Heroku/Helpers.html#method-i-format_bytes","(amount)",""],["format_date","Heroku::Helpers","Heroku/Helpers.html#method-i-format_date","(date)",""],["format_error","Heroku::Helpers","Heroku/Helpers.html#method-i-format_error","(error, message='Heroku client internal error.')",""],["format_key_for_display","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-format_key_for_display","(key)",""],["format_with_bang","Heroku::Helpers","Heroku/Helpers.html#method-i-format_with_bang","(message)",""],["full_host","Heroku::Auth","Heroku/Auth.html#method-c-full_host","(host)",""],["gem_version_string","Heroku::Client","Heroku/Client.html#method-c-gem_version_string","()",""],["generate_ssh_key","Heroku::Auth","Heroku/Auth.html#method-c-generate_ssh_key","(keyfile)",""],["get","Heroku::Command::Config","Heroku/Command/Config.html#method-i-get","()","\n<pre>config:get KEY\n\ndisplay a config value for an app</pre>\n<p>Examples:\n\n<pre>$ heroku config:get A\none</pre>\n"],["get_backup","Heroku::Client::Pgbackups","Heroku/Client/Pgbackups.html#method-i-get_backup","(name, opts={})",""],["get_backups","Heroku::Client::Pgbackups","Heroku/Client/Pgbackups.html#method-i-get_backups","(opts={})",""],["get_database","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-get_database","(extended=false)",""],["get_feature","Heroku::Client","Heroku/Client.html#method-i-get_feature","(app, name)",""],["get_latest_backup","Heroku::Client::Pgbackups","Heroku/Client/Pgbackups.html#method-i-get_latest_backup","()",""],["get_terminal_environment","Heroku::Helpers","Heroku/Helpers.html#method-i-get_terminal_environment","()",""],["get_transfer","Heroku::Client::Pgbackups","Heroku/Client/Pgbackups.html#method-i-get_transfer","(id)",""],["get_transfers","Heroku::Client::Pgbackups","Heroku/Client/Pgbackups.html#method-i-get_transfers","()",""],["get_wait_status","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-get_wait_status","()",""],["get_with_redirect","Excon","Excon.html#method-c-get_with_redirect","(url, options={})",""],["git","Heroku::Helpers","Heroku/Helpers.html#method-i-git","(args)",""],["git_host","Heroku::Auth","Heroku/Auth.html#method-c-git_host","()",""],["git_remotes","Heroku::Command::Base","Heroku/Command/Base.html#method-i-git_remotes","(base_dir=Dir.pwd)",""],["git_remotes","Heroku::Command::Base","Heroku/Command/Base.html#method-i-git_remotes","(base_dir=Dir.pwd)",""],["global_option","Heroku::Command","Heroku/Command.html#method-c-global_option","(name, *args, &blk)",""],["global_options","Heroku::Command","Heroku/Command.html#method-c-global_options","()",""],["group","Heroku::Deprecated::Help::ClassMethods","Heroku/Deprecated/Help/ClassMethods.html#method-i-group","(title, &block)",""],["groups","Heroku::Deprecated::Help::ClassMethods","Heroku/Deprecated/Help/ClassMethods.html#method-i-groups","()",""],["has_git?","Heroku::Helpers","Heroku/Helpers.html#method-i-has_git-3F","()",""],["headers","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-c-headers","()",""],["heroku","Heroku::Command::Base","Heroku/Command/Base.html#method-i-heroku","()",""],["heroku","Heroku::Command::Base","Heroku/Command/Base.html#method-i-heroku","()",""],["heroku_postgresql_host","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-heroku_postgresql_host","()",""],["heroku_postgresql_resource","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-heroku_postgresql_resource","()",""],["hexdec4","Heroku::OkJson","Heroku/OkJson.html#method-i-hexdec4","(s)",""],["home_directory","Heroku::Helpers","Heroku/Helpers.html#method-i-home_directory","()",""],["host","Heroku::Auth","Heroku/Auth.html#method-c-host","()",""],["hpg_addon_name","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-hpg_addon_name","()",""],["hpg_databases","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-hpg_databases","()",""],["hpg_resolve","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-hpg_resolve","(name, default=nil)",""],["hpg_translate_fork_and_follow","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-hpg_translate_fork_and_follow","(addon, config)",""],["hprint","Heroku::Helpers","Heroku/Helpers.html#method-i-hprint","(string='')",""],["hputs","Heroku::Helpers","Heroku/Helpers.html#method-i-hputs","(string='')",""],["http_get","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-http_get","(path)",""],["http_post","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-http_post","(path, payload = {})",""],["http_put","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-http_put","(path, payload = {})",""],["httpcache_purge","Heroku::Client","Heroku/Client.html#method-i-httpcache_purge","(app_name)",""],["included","Heroku::Deprecated::Help","Heroku/Deprecated/Help.html#method-c-included","(base)",""],["included","Heroku::Helpers","Heroku/Helpers.html#method-c-included","(base)",""],["included_into","Heroku::Helpers","Heroku/Helpers.html#method-c-included_into","()",""],["index","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-index","()","<p>addons\n<p>list installed addons\n"],["index","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-index","()","\n<pre>apps\n\nlist your apps</pre>\n<p>Example:\n\n<pre>$ heroku apps\n=== My Apps\nexample\nexample2\n\n=== Collaborated Apps\ntheirapp ...</pre>\n"],["index","Heroku::Command::Auth","Heroku/Command/Auth.html#method-i-index","()","<p>auth\n<p>Authenticate, display token and current user\n"],["index","Heroku::Command::Certs","Heroku/Command/Certs.html#method-i-index","()","<p>certs\n<p>list ssl endpoints for an app\n"],["index","Heroku::Command::Config","Heroku/Command/Config.html#method-i-index","()","\n<pre>config\n\ndisplay the config vars for an app\n\n-s, --shell  # output config vars in shell format</pre>\n<p>Examples: …\n"],["index","Heroku::Command::Domains","Heroku/Command/Domains.html#method-i-index","()","\n<pre>domains\n\nlist custom domains for an app</pre>\n<p>Examples:\n\n<pre>$ heroku domains\n=== Domain names for example\nexample.com</pre>\n"],["index","Heroku::Command::Drains","Heroku/Command/Drains.html#method-i-index","()","<p>drains\n<p>list all syslog drains\n"],["index","Heroku::Command::Help","Heroku/Command/Help.html#method-i-index","()","\n<pre>help [COMMAND]\n\nlist available commands or display help for a specific command</pre>\n<p>Examples:\n\n<pre>$ heroku help ...</pre>\n"],["index","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-index","()","\n<pre>keys\n\ndisplay keys for the current user\n\n-l, --long  # display extended information for each key</pre>\n<p>Examples: …\n"],["index","Heroku::Command::Labs","Heroku/Command/Labs.html#method-i-index","()","\n<pre>labs\n\nlist experimental features</pre>\n<p>Example:\n\n<pre>=== User Features (david@heroku.com)\n[+] dashboard  Use Heroku ...</pre>\n"],["index","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-index","()","\n<pre>logs\n\ndisplay recent log output\n\n-n, --num NUM        # the number of lines to display\n-p, --ps PS   ...</pre>\n"],["index","Heroku::Command::Maintenance","Heroku/Command/Maintenance.html#method-i-index","()","\n<pre>maintenance\n\ndisplay the current maintenance status of app</pre>\n<p>Example:\n\n<pre>$ heroku maintenance\noff</pre>\n"],["index","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-index","()","<p>pg\n<p>List databases for an app\n"],["index","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-index","()","<p>pgbackups\n<p>list captured backups\n"],["index","Heroku::Command::Plugins","Heroku/Command/Plugins.html#method-i-index","()","\n<pre>plugins\n\nlist installed plugins</pre>\n<p>Example:\n\n<pre>$ heroku plugins\n=== Installed Plugins\nheroku-accounts</pre>\n"],["index","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-index","()","\n<pre>ps\n\nlist processes for an app</pre>\n<p>Example:\n\n<pre>$ heroku ps\n=== run: one-off processes\nrun.1: up for 5m: `bash` ...</pre>\n"],["index","Heroku::Command::Regions","Heroku/Command/Regions.html#method-i-index","()","\n<pre>regions\n\nHIDDEN: List available regions for deployment</pre>\n<p>Example:\n\n<pre>$ heroku regions\n=== Regions\nus</pre>\n"],["index","Heroku::Command::Releases","Heroku/Command/Releases.html#method-i-index","()","\n<pre>releases\n\nlist releases</pre>\n<p>Example:\n\n<pre>$ heroku releases\n=== example Releases\nv1 Config add FOO_BAR by email@example.com ...</pre>\n"],["index","Heroku::Command::Run","Heroku/Command/Run.html#method-i-index","()","\n<pre>run COMMAND\n\nrun an attached process</pre>\n<p>Example:\n\n<pre>$ heroku run bash\nRunning `bash` attached to terminal... ...</pre>\n"],["index","Heroku::Command::Sharing","Heroku/Command/Sharing.html#method-i-index","()","\n<pre>sharing\n\nlist collaborators on an app</pre>\n<p>Example:\n\n<pre>$ heroku sharing\n=== example Collaborators\ncollaborator@example.com ...</pre>\n"],["index","Heroku::Command::Ssl","Heroku/Command/Ssl.html#method-i-index","()","<p>ssl\n<p>list certificates for an app\n"],["index","Heroku::Command::Stack","Heroku/Command/Stack.html#method-i-index","()","\n<pre>stack\n\nshow the list of available stacks</pre>\n<p>Example:\n\n<pre>$ heroku stack\n=== example Available Stacks\n  bamboo-mri-1.9.2 ...</pre>\n"],["index","Heroku::Command::Status","Heroku/Command/Status.html#method-i-index","()","\n<pre>status\n\ndisplay current status of heroku platform</pre>\n<p>Example:\n\n<pre>$ heroku status\n=== Heroku Status\nDevelopment: ...</pre>\n"],["index","Heroku::Command::Update","Heroku/Command/Update.html#method-i-index","()","<p>update\n<p>update the heroku client\n<p>Example:\n"],["index","Heroku::Command::Version","Heroku/Command/Version.html#method-i-index","()","\n<pre>version\n\nshow heroku client version</pre>\n<p>Example:\n\n<pre>$ heroku version\nheroku-toolbelt/1.2.3 (x86_64-darwin11.2.0) ...</pre>\n"],["info","Heroku::Client","Heroku/Client.html#method-i-info","(name_or_domain)","<p>Show info such as mode, custom domain, and collaborators on an app.\n"],["info","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-info","()","\n<pre>apps:info\n\nshow detailed app information\n\n-s, --shell  # output more shell friendly key/value pairs</pre>\n<p>Examples: …\n"],["info","Heroku::Command::Certs","Heroku/Command/Certs.html#method-i-info","()","<p>certs:info\n<p>show certificate information for an ssl endpoint\n"],["info","Heroku::Command::Labs","Heroku/Command/Labs.html#method-i-info","()","\n<pre>labs:info FEATURE\n\ndisplays additional information about FEATURE</pre>\n<p>Example:\n\n<pre>$ heroku labs:info user_env_compile ...</pre>\n"],["info","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-info","()","<p>pg:info [DATABASE]\n\n<pre>-x, --extended  # Show extended information</pre>\n<p>Display database information\n"],["info","Heroku::Command::Releases","Heroku/Command/Releases.html#method-i-info","()","\n<pre>releases:info RELEASE\n\nview detailed information for a release\nfind latest release details by passing ...</pre>\n"],["ingress","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-ingress","()",""],["inherited","Heroku::Command::Base","Heroku/Command/Base.html#method-c-inherited","(klass)",""],["inherited","Heroku::Command::Base","Heroku/Command/Base.html#method-c-inherited","(klass)",""],["inject_libpath","Heroku::Updater","Heroku/Updater.html#method-c-inject_libpath","()",""],["install","Heroku::Command::Plugins","Heroku/Command/Plugins.html#method-i-install","()","\n<pre>plugins:install URL\n\ninstall a plugin</pre>\n<p>Example:\n\n<pre>$ heroku plugins:install https://github.com/ddollar/heroku-accounts.git ...</pre>\n"],["install","Heroku::Plugin","Heroku/Plugin.html#method-i-install","()",""],["install_addon","Heroku::Client","Heroku/Client.html#method-i-install_addon","(app_name, addon, config={})",""],["installed_addons","Heroku::Client","Heroku/Client.html#method-i-installed_addons","(app_name)",""],["installed_client_path","Heroku::Updater","Heroku/Updater.html#method-c-installed_client_path","()",""],["invalid_arguments","Heroku::Command","Heroku/Command.html#method-c-invalid_arguments","()",""],["invalid_arguments","Heroku::Command::Base","Heroku/Command/Base.html#method-i-invalid_arguments","()",""],["invalid_arguments","Heroku::Command::Base","Heroku/Command/Base.html#method-i-invalid_arguments","()",""],["json_decode","Heroku::Helpers","Heroku/Helpers.html#method-i-json_decode","(json)",""],["json_encode","Heroku::Helpers","Heroku/Helpers.html#method-i-json_encode","(object)",""],["key","Heroku::Command::Certs","Heroku/Command/Certs.html#method-i-key","()","<p>certs:key PEM KEY [KEY …]\n<p>Print the correct key for the given certificate.\n<p>You must pass one single certificate, …\n"],["keyenc","Heroku::OkJson","Heroku/OkJson.html#method-i-keyenc","(k)",""],["keys","Heroku::Client","Heroku/Client.html#method-i-keys","()","<p>Get the list of ssh public keys for the current user.\n"],["last_autoupdate_path","Heroku::Updater","Heroku/Updater.html#method-c-last_autoupdate_path","()",""],["latest_local_version","Heroku::Updater","Heroku/Updater.html#method-c-latest_local_version","()",""],["launchy","Heroku::Helpers","Heroku/Helpers.html#method-i-launchy","(message, url)",""],["legacy_credentials_path","Heroku::Auth","Heroku/Auth.html#method-c-legacy_credentials_path","()",""],["lex","Heroku::OkJson","Heroku/OkJson.html#method-i-lex","(s)","<p>Scans s and returns a list of json tokens, excluding white space (as\ndefined in RFC 4627).\n"],["line_formatter","Heroku::Helpers","Heroku/Helpers.html#method-i-line_formatter","(array)","<p>produces a printf formatter line for an array of items if an individual\nline item is an array, it will …\n"],["list","Heroku::Client","Heroku/Client.html#method-i-list","()","<p>Show a list of apps which you are a collaborator on.\n"],["list","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-list","()","<p>addons:list\n<p>list all available addons\n"],["list","Heroku::Plugin","Heroku/Plugin.html#method-c-list","()",""],["list_collaborators","Heroku::Client","Heroku/Client.html#method-i-list_collaborators","(app_name)","<p>Get a list of collaborators on the app, returns an array of hashes each\nwith :email\n"],["list_domains","Heroku::Client","Heroku/Client.html#method-i-list_domains","(app_name)",""],["list_drains","Heroku::Client","Heroku/Client.html#method-i-list_drains","(app_name)",""],["list_features","Heroku::Client","Heroku/Client.html#method-i-list_features","(app)",""],["list_stacks","Heroku::Client","Heroku/Client.html#method-i-list_stacks","(app_name, options={})","<p>Get a list of stacks available to the app, with the current one marked.\n"],["load","Heroku::Command","Heroku/Command.html#method-c-load","()",""],["load!","Heroku::Plugin","Heroku/Plugin.html#method-c-load-21","()",""],["load_plugin","Heroku::Plugin","Heroku/Plugin.html#method-c-load_plugin","(plugin)",""],["load_taps","Heroku::Command::Db","Heroku/Command/Db.html#method-i-load_taps","()",""],["login","Heroku::Auth","Heroku/Auth.html#method-c-login","()",""],["login","Heroku::Command::Auth","Heroku/Command/Auth.html#method-i-login","()","\n<pre>auth:login\n\nlog in with your heroku credentials</pre>\n<p>Example:\n\n<pre>$ heroku auth:login\nEnter your Heroku credentials: ...</pre>\n"],["logout","Heroku::Auth","Heroku/Auth.html#method-c-logout","()",""],["logout","Heroku::Command::Auth","Heroku/Command/Auth.html#method-i-logout","()","\n<pre>auth:logout\n\nclear local authentication credentials</pre>\n<p>Example:\n\n<pre>$ heroku auth:logout\nLocal credentials cleared.</pre>\n"],["logs","Heroku::Client","Heroku/Client.html#method-i-logs","(app_name)","<p>Fetch recent logs from the app server.\n"],["longest","Heroku::Helpers","Heroku/Helpers.html#method-i-longest","(items)",""],["maintenance","Heroku::Client","Heroku/Client.html#method-i-maintenance","(app_name, mode)",""],["match_attachments_by_name","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-match_attachments_by_name","(name)",""],["method_added","Heroku::Command::Base","Heroku/Command/Base.html#method-c-method_added","(method)",""],["method_added","Heroku::Command::Base","Heroku/Command/Base.html#method-c-method_added","(method)",""],["migrate","Heroku::Command::Stack","Heroku/Command/Stack.html#method-i-migrate","()","\n<pre>stack:migrate STACK\n\nprepare migration of this app to a new stack</pre>\n<p>Example:\n\n<pre>$ heroku stack:migrate cedar ...</pre>\n"],["migrate_to_stack","Heroku::Client","Heroku/Client.html#method-i-migrate_to_stack","(app_name, stack)","<p>Request a stack migration.\n"],["namespace","Heroku::Command::Base","Heroku/Command/Base.html#method-c-namespace","()",""],["namespace","Heroku::Command::Base","Heroku/Command/Base.html#method-c-namespace","()",""],["namespaces","Heroku::Command","Heroku/Command.html#method-c-namespaces","()",""],["netrc_path","Heroku::Auth","Heroku/Auth.html#method-c-netrc_path","()",""],["new","Heroku::Client","Heroku/Client.html#method-c-new","(user, password, host=Heroku::Auth.host)",""],["new","Heroku::Client::ConsoleSession","Heroku/Client/ConsoleSession.html#method-c-new","(id, app, client)",""],["new","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-c-new","(attachment)",""],["new","Heroku::Client::Pgbackups","Heroku/Client/Pgbackups.html#method-c-new","(uri)",""],["new","Heroku::Client::Rendezvous","Heroku/Client/Rendezvous.html#method-c-new","(opts)",""],["new","Heroku::Client::Service","Heroku/Client/Service.html#method-c-new","(client, app)",""],["new","Heroku::Command::Base","Heroku/Command/Base.html#method-c-new","(args=[], options={})",""],["new","Heroku::Command::Base","Heroku/Command/Base.html#method-c-new","(args=[], options={})",""],["new","Heroku::Deprecated::Help::HelpGroup","Heroku/Deprecated/Help/HelpGroup.html#method-c-new","(title)",""],["new","Heroku::Helpers::HerokuPostgresql::Attachment","Heroku/Helpers/HerokuPostgresql/Attachment.html#method-c-new","(raw)",""],["new","Heroku::Plugin","Heroku/Plugin.html#method-c-new","(uri)",""],["new","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-c-new","(*args)",""],["new","Pgbackups::Client","Pgbackups/Client.html#method-c-new","(*args)",""],["nibble","Heroku::OkJson","Heroku/OkJson.html#method-i-nibble","(c)",""],["nulltok","Heroku::OkJson","Heroku/OkJson.html#method-i-nulltok","(s)",""],["numenc","Heroku::OkJson","Heroku/OkJson.html#method-i-numenc","(x)",""],["numtok","Heroku::OkJson","Heroku/OkJson.html#method-i-numtok","(s)",""],["objenc","Heroku::OkJson","Heroku/OkJson.html#method-i-objenc","(x)",""],["objparse","Heroku::OkJson","Heroku/OkJson.html#method-i-objparse","(ts)","<p>Parses an “object” in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. …\n"],["off","Heroku::Command::Maintenance","Heroku/Command/Maintenance.html#method-i-off","()","\n<pre>maintenance:off\n\ntake the app out of maintenance mode</pre>\n<p>Example:\n\n<pre>$ heroku maintenance:off\nDisabling maintenance ...</pre>\n"],["on","Heroku::Command::Maintenance","Heroku/Command/Maintenance.html#method-i-on","()","\n<pre>maintenance:on\n\nput the app into maintenance mode</pre>\n<p>Example:\n\n<pre>$ heroku maintenance:on\nEnabling maintenance ...</pre>\n"],["on_warning","Heroku::Client","Heroku/Client.html#method-i-on_warning","(&blk)",""],["open","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-open","()","<p>addons:open ADDON\n<p>open an addon’s dashboard in your browser\n"],["open","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-open","()","\n<pre>apps:open\n\nopen the app in a web browser</pre>\n<p>Example:\n\n<pre>$ heroku apps:open\nOpening example... done</pre>\n"],["output_with_bang","Heroku::Helpers","Heroku/Helpers.html#method-i-output_with_bang","(message=\"\", new_line=true)",""],["pairparse","Heroku::OkJson","Heroku/OkJson.html#method-i-pairparse","(ts)","<p>Parses a “member” in the sense of RFC 4627. Returns the parsed values and\nany trailing tokens. …\n"],["parse","Heroku::Client::JSON","Heroku/Client/JSON.html#method-c-parse","(json)",""],["parse","Heroku::Command","Heroku/Command.html#method-c-parse","(cmd)",""],["parse_database_yml","Heroku::Command::Db","Heroku/Command/Db.html#method-i-parse_database_yml","()",""],["parse_error_json","Heroku::Command","Heroku/Command.html#method-c-parse_error_json","(body)",""],["parse_error_plain","Heroku::Command","Heroku/Command.html#method-c-parse_error_plain","(body)",""],["parse_error_xml","Heroku::Command","Heroku/Command.html#method-c-parse_error_xml","(body)",""],["parse_log","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-parse_log","(log)",""],["parse_taps_opts","Heroku::Command::Db","Heroku/Command/Db.html#method-i-parse_taps_opts","()",""],["path","Heroku::Plugin","Heroku/Plugin.html#method-i-path","()",""],["pgbackup_client","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-pgbackup_client","()",""],["poll_error","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-poll_error","(app)",""],["poll_transfer!","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-poll_transfer-21","(transfer)",""],["prepare_run","Heroku::Command","Heroku/Command.html#method-c-prepare_run","(cmd, args=[])",""],["primary_attachment!","Heroku::Helpers::HerokuPostgresql::Attachment","Heroku/Helpers/HerokuPostgresql/Attachment.html#method-i-primary_attachment-21","()",""],["primary_attachment?","Heroku::Helpers::HerokuPostgresql::Attachment","Heroku/Helpers/HerokuPostgresql/Attachment.html#method-i-primary_attachment-3F","()",""],["process","Heroku::Client","Heroku/Client.html#method-i-process","(method, uri, extra_headers={}, payload=nil)",""],["promote","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-promote","()","<p>pg:promote DATABASE\n<p>Sets DATABASE as your DATABASE_URL\n"],["ps","Heroku::Client","Heroku/Client.html#method-i-ps","(app_name)","<p>Retreive ps list for the given app name.\n"],["ps_restart","Heroku::Client","Heroku/Client.html#method-i-ps_restart","(app, opts={})",""],["ps_run","Heroku::Client","Heroku/Client.html#method-i-ps_run","(app, opts={})",""],["ps_scale","Heroku::Client","Heroku/Client.html#method-i-ps_scale","(app, opts={})",""],["ps_stop","Heroku::Client","Heroku/Client.html#method-i-ps_stop","(app, opts={})",""],["psql","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-psql","()","<p>pg:psql [DATABASE]\n<p>Open a psql shell to the database\n<p>defaults to DATABASE_URL databases if no DATABASE …\n"],["pull","Heroku::Command::Db","Heroku/Command/Db.html#method-i-pull","()","<p>db:pull [DATABASE_URL]\n<p>pull heroku data down into your local database\n<p>DATABASE_URL should reference your …\n"],["push","Heroku::Command::Db","Heroku/Command/Db.html#method-i-push","()","<p>db:push [DATABASE_URL]\n<p>push local data up to your app\n<p>DATABASE_URL should reference your local database. …\n"],["quantify","Heroku::Helpers","Heroku/Helpers.html#method-i-quantify","(string, num)",""],["rake","Heroku::Client","Heroku/Client.html#method-i-rake","(app_name, cmd)","<p>Run a rake command on the Heroku app and return output as a string\n"],["rake","Heroku::Command::Run","Heroku/Command/Run.html#method-i-rake","()","\n<pre>run:rake COMMAND\n\nWARNING: `heroku run:rake` has been deprecated. Please use `heroku run rake` instead.&quot; ...</pre>\n"],["read","Heroku::Client::Service","Heroku/Client/Service.html#method-i-read","()","<p>Read the next chunk of output.\n"],["read_credentials","Heroku::Auth","Heroku/Auth.html#method-c-read_credentials","()",""],["read_logs","Heroku::Client","Heroku/Client.html#method-i-read_logs","(app_name, options=[])",""],["reauthorize","Heroku::Auth","Heroku/Auth.html#method-c-reauthorize","()",""],["redisplay","Heroku::Helpers","Heroku/Helpers.html#method-i-redisplay","(line, line_break = false)",""],["register_command","Heroku::Command","Heroku/Command.html#method-c-register_command","(command)",""],["register_namespace","Heroku::Command","Heroku/Command.html#method-c-register_namespace","(namespace)",""],["release","Heroku::Client","Heroku/Client.html#method-i-release","(app, release)",""],["releases","Heroku::Client","Heroku/Client.html#method-i-releases","(app)",""],["remote","Heroku::Command::Git","Heroku/Command/Git.html#method-i-remote","()","\n<pre>git:remote [OPTIONS]\n\nadds a git remote to an app repo\n\nif OPTIONS are specified they will be passed ...</pre>\n"],["remove","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-remove","()","<p>addons:remove ADDON1 [ADDON2 …]\n<p>uninstall one or more addons\n"],["remove","Heroku::Command::Certs","Heroku/Command/Certs.html#method-i-remove","()","<p>certs:remove\n<p>remove an SSL Endpoint from an app\n"],["remove","Heroku::Command::Domains","Heroku/Command/Domains.html#method-i-remove","()","\n<pre>domains:remove DOMAIN\n\nremove a custom domain from an app</pre>\n<p>Examples:\n\n<pre>$ heroku domains:remove example.com ...</pre>\n"],["remove","Heroku::Command::Drains","Heroku/Command/Drains.html#method-i-remove","()","<p>drains:remove URL\n<p>remove a syslog drain\n"],["remove","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-remove","()","\n<pre>keys:remove KEY\n\nremove a key from the current user</pre>\n<p>Examples:\n\n<pre>$ heroku keys:remove email@example.com\nRemoving ...</pre>\n"],["remove","Heroku::Command::Sharing","Heroku/Command/Sharing.html#method-i-remove","()","\n<pre>sharing:remove EMAIL\n\nremove a collaborator from an app</pre>\n<p>Example:\n\n<pre>$ heroku sharing:remove collaborator@example.com ...</pre>\n"],["remove","Heroku::Command::Ssl","Heroku/Command/Ssl.html#method-i-remove","()","<p>ssl:remove DOMAIN\n<p>remove an ssl certificate from an app\n"],["remove_all_keys","Heroku::Client","Heroku/Client.html#method-i-remove_all_keys","()","<p>Clear all keys on the current user.\n"],["remove_collaborator","Heroku::Client","Heroku/Client.html#method-i-remove_collaborator","(app_name, email)","<p>Remove a collaborator.\n"],["remove_config_var","Heroku::Client","Heroku/Client.html#method-i-remove_config_var","(app_name, key)",""],["remove_domain","Heroku::Client","Heroku/Client.html#method-i-remove_domain","(app_name, domain)",""],["remove_domains","Heroku::Client","Heroku/Client.html#method-i-remove_domains","(app_name)",""],["remove_drain","Heroku::Client","Heroku/Client.html#method-i-remove_drain","(app_name, url)",""],["remove_key","Heroku::Client","Heroku/Client.html#method-i-remove_key","(key)","<p>Remove an existing ssh public key from the current user.\n"],["remove_plugin","Heroku::Plugin","Heroku/Plugin.html#method-c-remove_plugin","(plugin)",""],["remove_ssl","Heroku::Client","Heroku/Client.html#method-i-remove_ssl","(app_name, domain)",""],["rename","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-rename","()","\n<pre>apps:rename NEWNAME\n\nrename the app</pre>\n<p>Example:\n\n<pre>$ heroku apps:rename example-newname\nhttp://example-newname.herokuapp.com/ ...</pre>\n"],["rendezvous_session","Heroku::Command::Run","Heroku/Command/Run.html#method-i-rendezvous_session","(rendezvous_url, &on_connect)",""],["reset","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-reset","()",""],["reset","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-reset","()","<p>pg:reset DATABASE\n<p>Delete all data in DATABASE\n"],["resource","Heroku::Client","Heroku/Client.html#method-i-resource","(uri, options={})",""],["resource_name","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-resource_name","()",""],["resource_url","Heroku::Helpers::HerokuPostgresql","Heroku/Helpers/HerokuPostgresql.html#method-i-resource_url","(resource)",""],["restart","Heroku::Client","Heroku/Client.html#method-i-restart","(app_name)","<p>Restart the app servers.\n"],["restart","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-restart","()","\n<pre>ps:restart [PROCESS]\n\nrestart an app process\n\nif PROCESS is not specified, restarts all processes on ...</pre>\n"],["restore","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-restore","()","<p>pgbackups:restore [&lt;DATABASE&gt; [BACKUP_ID|BACKUP_URL]]\n<p>restore a backup to a database\n<p>if no DATABASE …\n"],["retry_login?","Heroku::Auth","Heroku/Auth.html#method-c-retry_login-3F","()",""],["retry_on_exception","Heroku::Helpers","Heroku/Helpers.html#method-i-retry_on_exception","(*exceptions)",""],["rollback","Heroku::Client","Heroku/Client.html#method-i-rollback","(app, release=nil)",""],["rollback","Heroku::Command::Certs","Heroku/Command/Certs.html#method-i-rollback","()","<p>certs:rollback\n<p>rollback an SSL Endpoint for an app\n"],["rollback","Heroku::Command::Releases","Heroku/Command/Releases.html#method-i-rollback","()","\n<pre>releases:rollback [RELEASE]\n\nroll back to an older release\n\nif RELEASE is not specified, will roll back ...</pre>\n"],["rotate_credentials","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-rotate_credentials","()",""],["run","Heroku::Client::ConsoleSession","Heroku/Client/ConsoleSession.html#method-i-run","(cmd)",""],["run","Heroku::Command","Heroku/Command.html#method-c-run","(cmd, arguments=[])",""],["run_attached","Heroku::Command::Run","Heroku/Command/Run.html#method-i-run_attached","(command)",""],["run_command","Heroku::Helpers","Heroku/Helpers.html#method-i-run_command","(command, args=[])",""],["run_console_command","Heroku::Client","Heroku/Client.html#method-i-run_console_command","(url, command, prefix=nil)","<p>internal method to run console commands formatting the output\n"],["running_on_a_mac?","Heroku::Helpers","Heroku/Helpers.html#method-i-running_on_a_mac-3F","()",""],["running_on_windows?","Heroku::Helpers","Heroku/Helpers.html#method-i-running_on_windows-3F","()",""],["scale","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-scale","()","\n<pre>ps:scale PROCESS1=AMOUNT1 [PROCESS2=AMOUNT2 ...]\n\nscale processes by the given amount</pre>\n<p>Examples:\n\n<pre>$ heroku ...</pre>\n"],["set","Heroku::Command::Config","Heroku/Command/Config.html#method-i-set","()","\n<pre>config:set KEY1=VALUE1 [KEY2=VALUE2 ...]\n\nset one or more config vars</pre>\n<p>Example:\n\n<pre>$ heroku config:set A=one ...</pre>\n"],["set_buffer","Heroku::Helpers","Heroku/Helpers.html#method-i-set_buffer","(enable)",""],["set_dynos","Heroku::Client","Heroku/Client.html#method-i-set_dynos","(app_name, qty)","<p>Scales the web processes.\n"],["set_workers","Heroku::Client","Heroku/Client.html#method-i-set_workers","(app_name, qty)","<p>Scales the background processes.\n"],["shell","Heroku::Helpers","Heroku/Helpers.html#method-i-shell","(cmd)",""],["shift_argument","Heroku::Command","Heroku/Command.html#method-c-shift_argument","()",""],["shift_argument","Heroku::Command::Base","Heroku/Command/Base.html#method-i-shift_argument","()",""],["shift_argument","Heroku::Command::Base","Heroku/Command/Base.html#method-i-shift_argument","()",""],["skip_plugins","Heroku::Plugin","Heroku/Plugin.html#method-c-skip_plugins","()",""],["space","Heroku::Deprecated::Help::HelpGroup","Heroku/Deprecated/Help/HelpGroup.html#method-i-space","()",""],["spinner","Heroku::Helpers","Heroku/Helpers.html#method-i-spinner","(ticks)",""],["ssl_endpoint_add","Heroku::Client","Heroku/Client.html#method-i-ssl_endpoint_add","(app, pem, key)",""],["ssl_endpoint_info","Heroku::Client","Heroku/Client.html#method-i-ssl_endpoint_info","(app, cname)",""],["ssl_endpoint_list","Heroku::Client","Heroku/Client.html#method-i-ssl_endpoint_list","(app)",""],["ssl_endpoint_remove","Heroku::Client","Heroku/Client.html#method-i-ssl_endpoint_remove","(app, cname)",""],["ssl_endpoint_rollback","Heroku::Client","Heroku/Client.html#method-i-ssl_endpoint_rollback","(app, cname)",""],["ssl_endpoint_update","Heroku::Client","Heroku/Client.html#method-i-ssl_endpoint_update","(app, cname, pem, key)",""],["start","Heroku::CLI","Heroku/CLI.html#method-c-start","(*args)",""],["start","Heroku::Client","Heroku/Client.html#method-i-start","(app_name, command, attached=false)","<p>Run a service. If Responds to #each and yields output as it’s received.\n"],["start","Heroku::Client::Rendezvous","Heroku/Client/Rendezvous.html#method-i-start","()",""],["start","Heroku::Client::Service","Heroku/Client/Service.html#method-i-start","(command, attached=false)","<p>start the service\n"],["starter_plan?","Heroku::Helpers::HerokuPostgresql::Attachment","Heroku/Helpers/HerokuPostgresql/Attachment.html#method-i-starter_plan-3F","()",""],["status","Heroku::Helpers","Heroku/Helpers.html#method-i-status","(message)",""],["step_map","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-step_map","()",""],["stop","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-stop","()","<p>ps:stop PROCESS\n<p>stop an app process\n<p>Examples:\n"],["strenc","Heroku::OkJson","Heroku/OkJson.html#method-i-strenc","(s)",""],["string_distance","Heroku::Helpers","Heroku/Helpers.html#method-i-string_distance","(first, last)",""],["strtok","Heroku::OkJson","Heroku/OkJson.html#method-i-strtok","(s)",""],["styled_array","Heroku::Helpers","Heroku/Helpers.html#method-i-styled_array","(array, options={})",""],["styled_error","Heroku::Helpers","Heroku/Helpers.html#method-i-styled_error","(error, message='Heroku client internal error.')",""],["styled_hash","Heroku::Helpers","Heroku/Helpers.html#method-i-styled_hash","(hash, keys=nil)",""],["styled_header","Heroku::Helpers","Heroku/Helpers.html#method-i-styled_header","(header)",""],["subst","Heroku::OkJson","Heroku/OkJson.html#method-i-subst","(u1, u2)",""],["suggestion","Heroku::Helpers","Heroku/Helpers.html#method-i-suggestion","(actual, possibilities)",""],["surrogate?","Heroku::OkJson","Heroku/OkJson.html#method-i-surrogate-3F","(u)",""],["sym_keys","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-sym_keys","(c)",""],["taps_client","Heroku::Command::Db","Heroku/Command/Db.html#method-i-taps_client","(op, opts)",""],["textparse","Heroku::OkJson","Heroku/OkJson.html#method-i-textparse","(ts)","<p>Parses a “json text” in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. …\n"],["time_ago","Heroku::Helpers","Heroku/Helpers.html#method-i-time_ago","(since)",""],["to_s","Heroku::Client::Service","Heroku/Client/Service.html#method-i-to_s","()","<p>All output as a string\n"],["to_s","Heroku::Plugin","Heroku/Plugin.html#method-i-to_s","()",""],["tok","Heroku::OkJson","Heroku/OkJson.html#method-i-tok","(s)","<p>Scans the first token in s and returns a 3-element list, or nil if s does\nnot begin with a valid token. …\n"],["token","Heroku::Command::Auth","Heroku/Command/Auth.html#method-i-token","()","\n<pre>auth:token\n\ndisplay your api token</pre>\n<p>Example:\n\n<pre>$ heroku auth:token\nABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789ABCD</pre>\n"],["transfer","Heroku::Command::Sharing","Heroku/Command/Sharing.html#method-i-transfer","()","\n<pre>sharing:transfer EMAIL\n\ntransfer an app to a new owner</pre>\n<p>Example:\n\n<pre>$ heroku sharing:transfer collaborator@example.com ...</pre>\n"],["transfer!","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-transfer-21","(from_url, from_name, to_url, to_name, opts={})",""],["transfer_status","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-transfer_status","(t)",""],["truetok","Heroku::OkJson","Heroku/OkJson.html#method-i-truetok","(s)",""],["truncate","Heroku::Helpers","Heroku/Helpers.html#method-i-truncate","(text, length)",""],["ucharcopy","Heroku::OkJson","Heroku/OkJson.html#method-i-ucharcopy","(t, s, i)","<p>Copies the valid UTF-8 bytes of a single character from string s at\nposition i to I/O object t, and returns …\n"],["ucharenc","Heroku::OkJson","Heroku/OkJson.html#method-i-ucharenc","(a, i, u)","<p>Encodes unicode character u as UTF-8 bytes in string a at position i.\nReturns the number of bytes written. …\n"],["unfollow","Heroku::Client::HerokuPostgresql","Heroku/Client/HerokuPostgresql.html#method-i-unfollow","()",""],["unfollow","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-unfollow","()","<p>pg:unfollow REPLICA\n<p>stop a replica from following and make it a read/write database\n"],["uninstall","Heroku::Command::Plugins","Heroku/Command/Plugins.html#method-i-uninstall","()","\n<pre>plugins:uninstall PLUGIN\n\nuninstall a plugin</pre>\n<p>Example:\n\n<pre>$ heroku plugins:uninstall heroku-accounts\nUninstalling ...</pre>\n"],["uninstall","Heroku::Plugin","Heroku/Plugin.html#method-i-uninstall","()",""],["uninstall_addon","Heroku::Client","Heroku/Client.html#method-i-uninstall_addon","(app_name, addon, options={})",""],["unquote","Heroku::OkJson","Heroku/OkJson.html#method-i-unquote","(q)","<p>Converts a quoted json string literal q into a UTF-8-encoded string. The\nrules are different than for …\n"],["unset","Heroku::Command::Config","Heroku/Command/Config.html#method-i-unset","()","<p>config:unset KEY1 [KEY2 …]\n<p>unset one or more config vars\n<p>$ heroku config:unset A Unsetting A and restarting …\n"],["update","Heroku::Client","Heroku/Client.html#method-i-update","(name, attributes)","<p>Update an app.  Available attributes:\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">name</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">rename</span> <span class=\"ruby-identifier\">the</span> <span class=\"ruby-identifier\">app</span> (<span class=\"ruby-identifier\">changes</span> <span class=\"ruby-identifier\">http</span> <span class=\"ruby-keyword\">and</span> <span class=\"ruby-identifier\">git</span> <span class=\"ruby-identifier\">urls</span>)\n</pre>\n"],["update","Heroku::Command::Certs","Heroku/Command/Certs.html#method-i-update","()","<p>certs:update PEM KEY\n<p>Update an SSL Endpoint on an app.\n\n<pre>--bypass  # bypass the trust chain completion step</pre>\n"],["update","Heroku::Command::Plugins","Heroku/Command/Plugins.html#method-i-update","()","\n<pre>plugins:update [PLUGIN]\n\nupdates all plugins or a single plugin by name</pre>\n<p>Example:\n\n<pre>$ heroku plugins:update ...</pre>\n"],["update","Heroku::Plugin","Heroku/Plugin.html#method-i-update","()",""],["update","Heroku::Updater","Heroku/Updater.html#method-c-update","(url, autoupdate=false)",""],["update_display","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-update_display","(transfer)",""],["updated_client_path","Heroku::Updater","Heroku/Updater.html#method-c-updated_client_path","()",""],["updating_lock_path","Heroku::Updater","Heroku/Updater.html#method-c-updating_lock_path","()",""],["upgrade","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-upgrade","()","<p>addons:upgrade ADDON\n<p>upgrade an existing addon\n"],["upgrade_addon","Heroku::Client","Heroku/Client.html#method-i-upgrade_addon","(app_name, addon, config={})",""],["uri_hash_to_url","Heroku::Command::Db","Heroku/Command/Db.html#method-i-uri_hash_to_url","(uri)",""],["url","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-url","()","<p>pgbackups:url [BACKUP_ID]\n<p>get a temporary URL for a backup\n"],["user_agent","Heroku","Heroku.html#method-c-user_agent","()",""],["user_agent=","Heroku","Heroku.html#method-c-user_agent-3D","(agent)",""],["userinfo_from_uri","Heroku::Command::Db","Heroku/Command/Db.html#method-i-userinfo_from_uri","(uri)",""],["valenc","Heroku::OkJson","Heroku/OkJson.html#method-i-valenc","(x)",""],["validate_arguments!","Heroku::Command","Heroku/Command.html#method-c-validate_arguments-21","()",""],["validate_arguments!","Heroku::Command::Base","Heroku/Command/Base.html#method-i-validate_arguments-21","()",""],["validate_arguments!","Heroku::Command::Base","Heroku/Command/Base.html#method-i-validate_arguments-21","()",""],["valparse","Heroku::OkJson","Heroku/OkJson.html#method-i-valparse","(ts)","<p>Parses a “value” in the sense of RFC 4627. Returns the parsed value and any\ntrailing tokens. …\n"],["verified_hosts","Heroku::Auth","Heroku/Auth.html#method-c-verified_hosts","()",""],["verify_host?","Heroku::Auth","Heroku/Auth.html#method-c-verify_host-3F","(host)",""],["version","Heroku::Client","Heroku/Client.html#method-c-version","()",""],["wait","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-wait","()","<p>pg:wait [DATABASE]\n<p>monitor database creation, exit when complete\n<p>defaults to all databases if no DATABASE …\n"],["wait_for_lock","Heroku::Updater","Heroku/Updater.html#method-c-wait_for_lock","(path, wait_for=5, check_every=0.5)",""],["warnings","Heroku::Command","Heroku/Command.html#method-c-warnings","()",""],["whoami","Heroku::Command::Auth","Heroku/Command/Auth.html#method-i-whoami","()","\n<pre>auth:whoami\n\ndisplay your heroku email address</pre>\n<p>Example:\n\n<pre>$ heroku auth:whoami\nemail@example.com</pre>\n"],["with_tty","Heroku::Helpers","Heroku/Helpers.html#method-i-with_tty","(&block)",""],["workers","Heroku::Client","Heroku/Client.html#method-i-workers","(app_name)",""],["workers","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-workers","()","\n<pre>ps:workers [QTY]\n\nDEPRECATED: use `heroku ps:scale workers=N`\n\nscale to QTY background processes\n\nif ...</pre>\n"],["write_credentials","Heroku::Auth","Heroku/Auth.html#method-c-write_credentials","()",""]]}}